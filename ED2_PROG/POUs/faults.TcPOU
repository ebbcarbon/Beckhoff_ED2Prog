<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="faults" Id="{676b0c44-de53-481b-87a6-7f945cc11bcf}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM faults
VAR PERSISTENT

//---Equipment Failure Faults----------------------------------------------------------------------------------------------

	//Discrete alarm example.  Replace with your own alarms
	u_3112_b_fail_to_start : alarm;
	u_3212_b_fail_to_start : alarm;
	u_3312_b_fail_to_start : alarm;
	u_3160_b_fail_to_start : alarm;
	u_3260_b_fail_to_start : alarm;
	u_3360_b_fail_to_start : alarm;
	u_3370_b_fail_to_start : alarm;
	u_3405_b_fail_to_start : alarm;
	// Discrete Alarm Example
	u_3112_b_fail_to_stop: Alarm;
	u_3212_b_fail_to_stop: Alarm;
	u_3312_b_fail_to_stop: Alarm;
	u_3160_b_fail_to_stop: Alarm;
	u_3260_b_fail_to_stop: Alarm;
	u_3360_b_fail_to_stop: Alarm;
	u_3370_b_fail_to_stop: Alarm;
	u_3405_b_fail_to_stop: Alarm;

	// Example analog valve position fail alarm
	av_3148_b_position_fail: Alarm;
	av_3248_b_position_fail: Alarm;
	av_3348_b_position_fail: Alarm;
	// Example digital valve fail to open alarm
	nv_3110_b_fail_to_open: Alarm;
	nv_3210_b_fail_to_open: Alarm;
	nv_3310_b_fail_to_open: Alarm;
	nv_3135_b_fail_to_open: Alarm;
	nv_3235_b_fail_to_open: Alarm;
	nv_3335_b_fail_to_open: Alarm;
	nv_3372_b_fail_to_open: Alarm;
	nv_3162_b_fail_to_open: Alarm;
	// Example digital valve fail to close alarm
	nv_3110_b_fail_to_close: Alarm;
	nv_3210_b_fail_to_close: Alarm;
	nv_3310_b_fail_to_close: Alarm;
	nv_3135_b_fail_to_close: Alarm;
	nv_3235_b_fail_to_close: Alarm;
	nv_3335_b_fail_to_close: Alarm;
	nv_3372_b_fail_to_close: Alarm;
	nv_3162_b_fail_to_close: Alarm;
	


//---Sensor threshold alarms----------------------------------------
	// Analog alarm low low
	cct_3120_b_low_low: Alarm;
	cct_3142_b_low_low: Alarm;
	cct_3220_b_low_low: Alarm;
	cct_3242_b_low_low: Alarm;
	cct_3320_b_low_low: Alarm;
	cct_3342_b_low_low: Alarm;
	cct_3413_b_low_low: Alarm;
	cgt_3910_b_low_low: Alarm;
	cpt_3144_b_low_low: Alarm;
	cpt_3158_b_low_low: Alarm;
	cpt_3407_b_low_low: Alarm;
	et_3711_b_low_low: Alarm;
	ft_3122_b_low_low: Alarm;
	ft_3222_b_low_low: Alarm;
	ft_3322_b_low_low: Alarm;
	it_3702_b_low_low: Alarm;
	lit_3905_b_low_low: Alarm;
	lit_3906_b_low_low: Alarm;
	lit_3907_b_low_low: Alarm;
	lit_3908_b_low_low: Alarm;
	lit_3915_b_low_low: Alarm;
	lt_3102_b_low_low: Alarm;
	lt_3153_b_low_low: Alarm;
	lt_3202_b_low_low: Alarm;
	lt_3253_b_low_low: Alarm;
	lt_3302_b_low_low: Alarm;
	lt_3353_b_low_low: Alarm;
	lt_3402_b_low_low: Alarm;
	pt_3119_b_low_low: Alarm;
	pt_3141_b_low_low: Alarm;
	pt_3219_b_low_low: Alarm;
	pt_3241_b_low_low: Alarm;
	pt_3319_b_low_low: Alarm;
	pt_3341_b_low_low: Alarm;
	pt_3414_b_low_low: Alarm;
	pt_3428_b_low_low: Alarm;
	tt_3118_b_low_low: Alarm;
	tt_3140_b_low_low: Alarm;
	tt_3218_b_low_low: Alarm;
	tt_3240_b_low_low: Alarm;
	tt_3318_b_low_low: Alarm;
	tt_3340_b_low_low: Alarm;
	tt_3432_b_low_low: Alarm;
	tt_3601_b_low_low: Alarm;


	// Analog alarm low
	cct_3120_b_low: Alarm;
	cct_3142_b_low: Alarm;
	cct_3220_b_low: Alarm;
	cct_3242_b_low: Alarm;
	cct_3320_b_low: Alarm;
	cct_3342_b_low: Alarm;
	cct_3413_b_low: Alarm;
	cgt_3910_b_low: Alarm;
	cpt_3144_b_low: Alarm;
	cpt_3158_b_low: Alarm;
	cpt_3407_b_low: Alarm;
	et_3711_b_low: Alarm;
	ft_3122_b_low: Alarm;
	ft_3222_b_low: Alarm;
	ft_3322_b_low: Alarm;
	it_3702_b_low: Alarm;
	lit_3905_b_low: Alarm;
	lit_3906_b_low: Alarm;
	lit_3907_b_low: Alarm;
	lit_3908_b_low: Alarm;
	lit_3915_b_low: Alarm;
	lt_3102_b_low: Alarm;
	lt_3153_b_low: Alarm;
	lt_3202_b_low: Alarm;
	lt_3253_b_low: Alarm;
	lt_3302_b_low: Alarm;
	lt_3353_b_low: Alarm;
	lt_3402_b_low: Alarm;
	pt_3119_b_low: Alarm;
	pt_3141_b_low: Alarm;
	pt_3219_b_low: Alarm;
	pt_3241_b_low: Alarm;
	pt_3319_b_low: Alarm;
	pt_3341_b_low: Alarm;
	pt_3414_b_low: Alarm;
	pt_3428_b_low: Alarm;
	tt_3118_b_low: Alarm;
	tt_3140_b_low: Alarm;
	tt_3218_b_low: Alarm;
	tt_3240_b_low: Alarm;
	tt_3318_b_low: Alarm;
	tt_3340_b_low: Alarm;
	tt_3432_b_low: Alarm;
	tt_3601_b_low: Alarm;


	// Analog alarm high
		cct_3120_b_high: Alarm;
	cct_3142_b_high: Alarm;
	cct_3220_b_high: Alarm;
	cct_3242_b_high: Alarm;
	cct_3320_b_high: Alarm;
	cct_3342_b_high: Alarm;
	cct_3413_b_high: Alarm;
	cgt_3910_b_high: Alarm;
	cpt_3144_b_high: Alarm;
	cpt_3158_b_high: Alarm;
	cpt_3407_b_high: Alarm;
	et_3711_b_high: Alarm;
	ft_3122_b_high: Alarm;
	ft_3222_b_high: Alarm;
	ft_3322_b_high: Alarm;
	it_3702_b_high: Alarm;
	lit_3905_b_high: Alarm;
	lit_3906_b_high: Alarm;
	lit_3907_b_high: Alarm;
	lit_3908_b_high: Alarm;
	lit_3915_b_high: Alarm;
	lt_3102_b_high: Alarm;
	lt_3153_b_high: Alarm;
	lt_3202_b_high: Alarm;
	lt_3253_b_high: Alarm;
	lt_3302_b_high: Alarm;
	lt_3353_b_high: Alarm;
	lt_3402_b_high: Alarm;
	pt_3119_b_high: Alarm;
	pt_3141_b_high: Alarm;
	pt_3219_b_high: Alarm;
	pt_3241_b_high: Alarm;
	pt_3319_b_high: Alarm;
	pt_3341_b_high: Alarm;
	pt_3414_b_high: Alarm;
	pt_3428_b_high: Alarm;
	tt_3118_b_high: Alarm;
	tt_3140_b_high: Alarm;
	tt_3218_b_high: Alarm;
	tt_3240_b_high: Alarm;
	tt_3318_b_high: Alarm;
	tt_3340_b_high: Alarm;
	tt_3432_b_high: Alarm;
	tt_3601_b_high: Alarm;


	// Analog alarm high high
		cct_3120_b_high_high: Alarm;
	cct_3142_b_high_high: Alarm;
	cct_3220_b_high_high: Alarm;
	cct_3242_b_high_high: Alarm;
	cct_3320_b_high_high: Alarm;
	cct_3342_b_high_high: Alarm;
	cct_3413_b_high_high: Alarm;
	cgt_3910_b_high_high: Alarm;
	cpt_3144_b_high_high: Alarm;
	cpt_3158_b_high_high: Alarm;
	cpt_3407_b_high_high: Alarm;
	et_3711_b_high_high: Alarm;
	ft_3122_b_high_high: Alarm;
	ft_3222_b_high_high: Alarm;
	ft_3322_b_high_high: Alarm;
	it_3702_b_high_high: Alarm;
	lit_3905_b_high_high: Alarm;
	lit_3906_b_high_high: Alarm;
	lit_3907_b_high_high: Alarm;
	lit_3908_b_high_high: Alarm;
	lit_3915_b_high_high: Alarm;
	lt_3102_b_high_high: Alarm;
	lt_3153_b_high_high: Alarm;
	lt_3202_b_high_high: Alarm;
	lt_3253_b_high_high: Alarm;
	lt_3302_b_high_high: Alarm;
	lt_3353_b_high_high: Alarm;
	lt_3402_b_high_high: Alarm;
	pt_3119_b_high_high: Alarm;
	pt_3141_b_high_high: Alarm;
	pt_3219_b_high_high: Alarm;
	pt_3241_b_high_high: Alarm;
	pt_3319_b_high_high: Alarm;
	pt_3341_b_high_high: Alarm;
	pt_3414_b_high_high: Alarm;
	pt_3428_b_high_high: Alarm;
	tt_3118_b_high_high: Alarm;
	tt_3140_b_high_high: Alarm;
	tt_3218_b_high_high: Alarm;
	tt_3240_b_high_high: Alarm;
	tt_3318_b_high_high: Alarm;
	tt_3340_b_high_high: Alarm;
	tt_3432_b_high_high: Alarm;
	tt_3601_b_high_high: Alarm;

//---System threshold alarms------------------------------------------------------------------------------------------------
	stack_inlet_cross_pressure_alm: Alarm;
	stack_redox_inlet_cross_pressure_alm: Alarm;
END_VAR
VAR
	salt_cross_pressure : REAL;
	acid_cross_pressure : REAL;
	base_cross_pressure : REAL;
	cross_pressure_cmp : REAL;
	redox_cross_pressure_cmp : REAL;
	max_inlet_pressure : REAL;
	min_inlet_pressure : REAL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Instantiate the alarm block, and map the inputs from the OPC GVL
(*u_3160_b_fail_to_start();
u_3160_b_fail_to_start.alm_ack:=opc.popa_0082_alarm_ack;
u_3160_b_fail_to_start.reset:=opc.popa_0082_alarm_reset;
u_3160_b_fail_to_start.priority:=opc.popa_0082_u_3160_b_fail_to_start_priority;
u_3160_b_fail_to_start.delay_setpoint:=opc.popa_0082_u_3160_b_fail_to_start_delay_setpoint;
u_3160_b_fail_to_start.enable:=opc.popa_0082_u_3160_b_fail_to_start_enable;

//Place your alarm trigger logic here.  
(*IF motor_starter_control.u_3160_b.run_command=TRUE AND motor_starter_control.u_3160_b.run_feedback=FALSE THEN
	u_3160_b_fail_to_start.trigger:=TRUE;
	ELSE
		u_3160_b_fail_to_start.trigger:=False;
	END_IF
	*)
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3160_b_fail_to_stop();
u_3160_b_fail_to_stop.alm_ack:=opc.popa_0082_alarm_ack;
u_3160_b_fail_to_stop.reset:=opc.popa_0082_alarm_reset;
u_3160_b_fail_to_stop.priority:=opc.popa_0082_u_3160_b_fail_to_stop_priority;
u_3160_b_fail_to_stop.delay_setpoint:=opc.popa_0082_u_3160_b_fail_to_stop_delay_setpoint;
u_3160_b_fail_to_stop.enable:=opc.popa_0082_u_3160_b_fail_to_stop_enable;

//Place your alarm trigger logic here.  
(*IF motor_starter_control.u_3160_b.run_command=FALSE AND motor_starter_control.u_3160_b.run_feedback=TRUE THEN
	u_3160_b_fail_to_stop.trigger:=TRUE;
	ELSE
		u_3160_b_fail_to_stop.trigger:=FALSE;
	END_IF
*)	*)

//---Pumps------------------------------------------------------------------------------------------------------------------------------------
//u_3112----------------------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3112_b_fail_to_start();
u_3112_b_fail_to_start.alm_ack:=opc.popa_0082_alarm_ack;
u_3112_b_fail_to_start.reset:=opc.popa_0082_alarm_reset;
u_3112_b_fail_to_start.priority:=opc.popa_0082_u_3112_b_fail_to_start_priority;
u_3112_b_fail_to_start.delay_setpoint:=opc.popa_0082_u_3112_b_fail_to_start_delay_setpoint;
u_3112_b_fail_to_start.enable:=opc.popa_0082_u_3112_b_fail_to_start_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3112_b.run_command = TRUE AND pump_manager.u_3112_b.run_feedback=FALSE THEN
	u_3112_b_fail_to_start.trigger:=TRUE;
	ELSE
		u_3112_b_fail_to_start.trigger:=FALSE;
	END_IF
	
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3112_b_fail_to_stop();
u_3112_b_fail_to_stop.alm_ack:=opc.popa_0082_alarm_ack;
u_3112_b_fail_to_stop.reset:=opc.popa_0082_alarm_reset;
u_3112_b_fail_to_stop.priority:=opc.popa_0082_u_3112_b_fail_to_stop_priority;
u_3112_b_fail_to_stop.delay_setpoint:=opc.popa_0082_u_3112_b_fail_to_stop_delay_setpoint;
u_3112_b_fail_to_stop.enable:=opc.popa_0082_u_3112_b_fail_to_stop_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3112_b.run_command = FALSE AND pump_manager.u_3112_b.run_feedback=TRUE THEN
	u_3112_b_fail_to_stop.trigger:=TRUE;
	ELSE
		u_3112_b_fail_to_stop.trigger:=FALSE;
	END_IF

//u_3212----------------------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3212_b_fail_to_start();
u_3212_b_fail_to_start.alm_ack:=opc.popa_0082_alarm_ack;
u_3212_b_fail_to_start.reset:=opc.popa_0082_alarm_reset;
u_3212_b_fail_to_start.priority:=opc.popa_0082_u_3212_b_fail_to_start_priority;
u_3212_b_fail_to_start.delay_setpoint:=opc.popa_0082_u_3212_b_fail_to_start_delay_setpoint;
u_3212_b_fail_to_start.enable:=opc.popa_0082_u_3212_b_fail_to_start_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3212_b.run_command = TRUE AND pump_manager.u_3212_b.run_feedback=FALSE THEN
	u_3212_b_fail_to_start.trigger:=TRUE;
	ELSE
		u_3212_b_fail_to_start.trigger:=FALSE;
	END_IF
	
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3212_b_fail_to_stop();
u_3212_b_fail_to_stop.alm_ack:=opc.popa_0082_alarm_ack;
u_3212_b_fail_to_stop.reset:=opc.popa_0082_alarm_reset;
u_3212_b_fail_to_stop.priority:=opc.popa_0082_u_3212_b_fail_to_stop_priority;
u_3212_b_fail_to_stop.delay_setpoint:=opc.popa_0082_u_3212_b_fail_to_stop_delay_setpoint;
u_3212_b_fail_to_stop.enable:=opc.popa_0082_u_3212_b_fail_to_stop_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3212_b.run_command = FALSE AND pump_manager.u_3212_b.run_feedback=TRUE THEN
	u_3212_b_fail_to_stop.trigger:=TRUE;
	ELSE
		u_3212_b_fail_to_stop.trigger:=FALSE;
	END_IF
	
//u_3312----------------------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3312_b_fail_to_start();
u_3312_b_fail_to_start.alm_ack:=opc.popa_0082_alarm_ack;
u_3312_b_fail_to_start.reset:=opc.popa_0082_alarm_reset;
u_3312_b_fail_to_start.priority:=opc.popa_0082_u_3312_b_fail_to_start_priority;
u_3312_b_fail_to_start.delay_setpoint:=opc.popa_0082_u_3312_b_fail_to_start_delay_setpoint;
u_3312_b_fail_to_start.enable:=opc.popa_0082_u_3312_b_fail_to_start_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3312_b.run_command = TRUE AND pump_manager.u_3312_b.run_feedback=FALSE THEN
	u_3312_b_fail_to_start.trigger:=TRUE;
	ELSE
		u_3312_b_fail_to_start.trigger:=FALSE;
	END_IF
	
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3312_b_fail_to_stop();
u_3312_b_fail_to_stop.alm_ack:=opc.popa_0082_alarm_ack;
u_3312_b_fail_to_stop.reset:=opc.popa_0082_alarm_reset;
u_3312_b_fail_to_stop.priority:=opc.popa_0082_u_3312_b_fail_to_stop_priority;
u_3312_b_fail_to_stop.delay_setpoint:=opc.popa_0082_u_3312_b_fail_to_stop_delay_setpoint;
u_3312_b_fail_to_stop.enable:=opc.popa_0082_u_3312_b_fail_to_stop_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3312_b.run_command = FALSE AND pump_manager.u_3312_b.run_feedback=TRUE THEN
	u_3312_b_fail_to_stop.trigger:=TRUE;
	ELSE
		u_3312_b_fail_to_stop.trigger:=FALSE;
	END_IF
	
//u_3405----------------------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3405_b_fail_to_start();
u_3405_b_fail_to_start.alm_ack:=opc.popa_0082_alarm_ack;
u_3405_b_fail_to_start.reset:=opc.popa_0082_alarm_reset;
//u_3405_b_fail_to_start.priority:=opc.popa_0082_u_3405_b_fail_to_start_priority;
//u_3405_b_fail_to_start.delay_setpoint:=opc.popa_0082_u_3405_b_fail_to_start_delay_setpoint;
//u_3405_b_fail_to_start.enable:=opc.popa_0082_u_3405_b_fail_to_start_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3405_b.run_command = TRUE AND pump_manager.u_3405_b.run_feedback=FALSE THEN
	u_3405_b_fail_to_start.trigger:=TRUE;
	ELSE
		u_3405_b_fail_to_start.trigger:=FALSE;
	END_IF
	
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3405_b_fail_to_stop();
u_3405_b_fail_to_stop.alm_ack:=opc.popa_0082_alarm_ack;
u_3405_b_fail_to_stop.reset:=opc.popa_0082_alarm_reset;
//u_3405_b_fail_to_stop.priority:=opc.popa_0082_u_3405_b_fail_to_stop_priority;
//u_3405_b_fail_to_stop.delay_setpoint:=opc.popa_0082_u_3405_b_fail_to_stop_delay_setpoint;
//u_3405_b_fail_to_stop.enable:=opc.popa_0082_u_3405_b_fail_to_stop_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3405_b.run_command = FALSE AND pump_manager.u_3405_b.run_feedback=TRUE THEN
	u_3405_b_fail_to_stop.trigger:=TRUE;
	ELSE
		u_3405_b_fail_to_stop.trigger:=FALSE;
	END_IF

//u_3160----------------------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3160_b_fail_to_start();
u_3160_b_fail_to_start.alm_ack:=opc.popa_0082_alarm_ack;
u_3160_b_fail_to_start.reset:=opc.popa_0082_alarm_reset;
u_3160_b_fail_to_start.priority:=opc.popa_0082_u_3160_b_fail_to_start_priority;
u_3160_b_fail_to_start.delay_setpoint:=opc.popa_0082_u_3160_b_fail_to_start_delay_setpoint;
u_3160_b_fail_to_start.enable:=opc.popa_0082_u_3160_b_fail_to_start_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3160_b.run_command = TRUE AND pump_manager.u_3160_b.run_feedback=FALSE THEN
	u_3160_b_fail_to_start.trigger:=TRUE;
	ELSE
		u_3160_b_fail_to_start.trigger:=FALSE;
	END_IF
	
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3160_b_fail_to_stop();
u_3160_b_fail_to_stop.alm_ack:=opc.popa_0082_alarm_ack;
u_3160_b_fail_to_stop.reset:=opc.popa_0082_alarm_reset;
u_3160_b_fail_to_stop.priority:=opc.popa_0082_u_3160_b_fail_to_stop_priority;
u_3160_b_fail_to_stop.delay_setpoint:=opc.popa_0082_u_3160_b_fail_to_stop_delay_setpoint;
u_3160_b_fail_to_stop.enable:=opc.popa_0082_u_3160_b_fail_to_stop_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3160_b.run_command = FALSE AND pump_manager.u_3160_b.run_feedback=TRUE THEN
	u_3160_b_fail_to_stop.trigger:=TRUE;
	ELSE
		u_3160_b_fail_to_stop.trigger:=FALSE;
	END_IF
	
	
//u_3260----------------------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3260_b_fail_to_start();
u_3260_b_fail_to_start.alm_ack:=opc.popa_0082_alarm_ack;
u_3260_b_fail_to_start.reset:=opc.popa_0082_alarm_reset;
u_3260_b_fail_to_start.priority:=opc.popa_0082_u_3260_b_fail_to_start_priority;
u_3260_b_fail_to_start.delay_setpoint:=opc.popa_0082_u_3260_b_fail_to_start_delay_setpoint;
u_3260_b_fail_to_start.enable:=opc.popa_0082_u_3260_b_fail_to_start_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3260_b.run_command = TRUE AND pump_manager.u_3260_b.run_feedback=FALSE THEN
	u_3260_b_fail_to_start.trigger:=TRUE;
	ELSE
		u_3260_b_fail_to_start.trigger:=FALSE;
	END_IF
	
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3260_b_fail_to_stop();
u_3260_b_fail_to_stop.alm_ack:=opc.popa_0082_alarm_ack;
u_3260_b_fail_to_stop.reset:=opc.popa_0082_alarm_reset;
u_3260_b_fail_to_stop.priority:=opc.popa_0082_u_3260_b_fail_to_stop_priority;
u_3260_b_fail_to_stop.delay_setpoint:=opc.popa_0082_u_3260_b_fail_to_stop_delay_setpoint;
u_3260_b_fail_to_stop.enable:=opc.popa_0082_u_3260_b_fail_to_stop_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3260_b.run_command = FALSE AND pump_manager.u_3260_b.run_feedback=TRUE THEN
	u_3260_b_fail_to_stop.trigger:=TRUE;
	ELSE
		u_3260_b_fail_to_stop.trigger:=FALSE;
	END_IF
	
//u_3360----------------------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3360_b_fail_to_start();
u_3360_b_fail_to_start.alm_ack:=opc.popa_0082_alarm_ack;
u_3360_b_fail_to_start.reset:=opc.popa_0082_alarm_reset;
u_3360_b_fail_to_start.priority:=opc.popa_0082_u_3360_b_fail_to_start_priority;
u_3360_b_fail_to_start.delay_setpoint:=opc.popa_0082_u_3360_b_fail_to_start_delay_setpoint;
u_3360_b_fail_to_start.enable:=opc.popa_0082_u_3360_b_fail_to_start_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3360_b.run_command = TRUE AND pump_manager.u_3360_b.run_feedback=FALSE THEN
	u_3360_b_fail_to_start.trigger:=TRUE;
	ELSE
		u_3360_b_fail_to_start.trigger:=FALSE;
	END_IF
	
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3360_b_fail_to_stop();
u_3360_b_fail_to_stop.alm_ack:=opc.popa_0082_alarm_ack;
u_3360_b_fail_to_stop.reset:=opc.popa_0082_alarm_reset;
u_3360_b_fail_to_stop.priority:=opc.popa_0082_u_3360_b_fail_to_stop_priority;
u_3360_b_fail_to_stop.delay_setpoint:=opc.popa_0082_u_3360_b_fail_to_stop_delay_setpoint;
u_3360_b_fail_to_stop.enable:=opc.popa_0082_u_3360_b_fail_to_stop_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3360_b.run_command = FALSE AND pump_manager.u_3360_b.run_feedback=TRUE THEN
	u_3360_b_fail_to_stop.trigger:=TRUE;
	ELSE
		u_3360_b_fail_to_stop.trigger:=FALSE;
	END_IF
	
//u_3370----------------------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3370_b_fail_to_start();
u_3370_b_fail_to_start.alm_ack:=opc.popa_0082_alarm_ack;
u_3370_b_fail_to_start.reset:=opc.popa_0082_alarm_reset;
u_3370_b_fail_to_start.priority:=opc.popa_0082_u_3370_b_fail_to_start_priority;
u_3370_b_fail_to_start.delay_setpoint:=opc.popa_0082_u_3370_b_fail_to_start_delay_setpoint;
u_3370_b_fail_to_start.enable:=opc.popa_0082_u_3370_b_fail_to_start_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3370_b.run_command = TRUE AND pump_manager.u_3370_b.run_feedback=FALSE THEN
	u_3370_b_fail_to_start.trigger:=TRUE;
	ELSE
		u_3370_b_fail_to_start.trigger:=FALSE;
	END_IF
	
//Instantiate the alarm block, and map the inputs from the OPC GVL
u_3370_b_fail_to_stop();
u_3370_b_fail_to_stop.alm_ack:=opc.popa_0082_alarm_ack;
u_3370_b_fail_to_stop.reset:=opc.popa_0082_alarm_reset;
u_3370_b_fail_to_stop.priority:=opc.popa_0082_u_3370_b_fail_to_stop_priority;
u_3370_b_fail_to_stop.delay_setpoint:=opc.popa_0082_u_3370_b_fail_to_stop_delay_setpoint;
u_3370_b_fail_to_stop.enable:=opc.popa_0082_u_3370_b_fail_to_stop_enable;

//Place your alarm trigger logic here.  
IF pump_manager.u_3370_b.run_command = FALSE AND pump_manager.u_3370_b.run_feedback=TRUE THEN
	u_3370_b_fail_to_stop.trigger:=TRUE;
	ELSE
		u_3370_b_fail_to_stop.trigger:=FALSE;
	END_IF
	

//---Valves---------------------------------------------------------------------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
av_3148_b_position_fail();
av_3148_b_position_fail.alm_ack:=opc.popa_0082_alarm_ack;
av_3148_b_position_fail.reset:=opc.popa_0082_alarm_reset;
av_3148_b_position_fail.priority:=opc.popa_0082_av_3148_b_position_fail_priority;
av_3148_b_position_fail.delay_setpoint:=opc.popa_0082_av_3148_b_position_fail_delay_setpoint;
av_3148_b_position_fail.enable:=opc.popa_0082_av_3148_b_position_fail_enable;

//Place your alarm trigger logic here.  
IF io_mapping.av_3148_b_position_feedback.scaled_value>valve_manager.av_3148_b.position_deadband_high OR io_mapping.av_3148_b_position_feedback.scaled_value<valve_manager.av_3148_b.position_deadband_low THEN
	av_3148_b_position_fail.trigger:=TRUE;
	ELSE
		av_3148_b_position_fail.trigger:=FALSE;
	END_IF
	
//Instantiate the alarm block, and map the inputs from the OPC GVL
nv_3372_b_fail_to_open();
nv_3372_b_fail_to_open.alm_ack:=opc.popa_0082_alarm_ack;
nv_3372_b_fail_to_open.reset:=opc.popa_0082_alarm_reset;
nv_3372_b_fail_to_open.priority:=opc.popa_0082_nv_3372_b_fail_to_open_priority;
nv_3372_b_fail_to_open.delay_setpoint:=opc.popa_0082_nv_3372_b_fail_to_open_delay_setpoint;
nv_3372_b_fail_to_open.enable:=opc.popa_0082_nv_3372_b_fail_to_open_enable;

//Place your alarm trigger logic here.  
IF valve_manager.nv_3372_b.open_command=TRUE AND valve_manager.nv_3372_b.open_feedback=FALSE THEN
	nv_3372_b_fail_to_open.trigger:=TRUE;
	ELSE
		nv_3372_b_fail_to_open.trigger:=FALSE;
	END_IF
	
//Instantiate the alarm block, and map the inputs from the OPC GVL
nv_3372_b_fail_to_close();
nv_3372_b_fail_to_close.alm_ack:=opc.popa_0082_alarm_ack;
nv_3372_b_fail_to_close.reset:=opc.popa_0082_alarm_reset;
nv_3372_b_fail_to_close.priority:=opc.popa_0082_nv_3372_b_fail_to_close_priority;
nv_3372_b_fail_to_close.delay_setpoint:=opc.popa_0082_nv_3372_b_fail_to_close_delay_setpoint;
nv_3372_b_fail_to_close.enable:=opc.popa_0082_nv_3372_b_fail_to_close_enable;

//Place your alarm trigger logic here.  
IF valve_manager.nv_3372_b.open_command=FALSE AND valve_manager.nv_3372_b.open_feedback=TRUE THEN
	nv_3372_b_fail_to_close.trigger:=TRUE;
	ELSE
		nv_3372_b_fail_to_close.trigger:=FALSE;
	END_IF	

	
//---System threshold alarms---------------------------------------------------------------------------------------------------

//Instantiate the alarm block, and map the inputs from the OPC GVL
stack_inlet_cross_pressure_alm();
stack_inlet_cross_pressure_alm.alm_ack:=opc.popa_0082_alarm_ack;
stack_inlet_cross_pressure_alm.reset:=opc.popa_0082_alarm_reset;
stack_inlet_cross_pressure_alm.priority:=3;//opc.popa_0082_nv_3372_b_fail_to_close_priority;
stack_inlet_cross_pressure_alm.delay_setpoint:= 1;//opc.popa_0082_nv_3372_b_fail_to_close_delay_setpoint;
stack_inlet_cross_pressure_alm.enable:=TRUE;//opc.popa_0082_nv_3372_b_fail_to_close_enable;

//Place your alarm trigger logic here.  
max_inlet_pressure := MAX(io_mapping.pt_3119_b.scaled_value, io_mapping.pt_3219_b.scaled_value, io_mapping.pt_3319_b.scaled_value); 
min_inlet_pressure := MIN(io_mapping.pt_3119_b.scaled_value, io_mapping.pt_3219_b.scaled_value, io_mapping.pt_3319_b.scaled_value);
cross_pressure_cmp :=(max_inlet_pressure - min_inlet_pressure); 
IF cross_pressure_cmp >= 0.1 THEN//OR (((io_mapping.pt_3119.scaled_value + io_mapping.pt_3141.scaled_value)/2) - io_mapping.pt_3414.scaled_value) >=0.1 THEN
	stack_inlet_cross_pressure_alm.trigger := TRUE;
	ELSE
		stack_inlet_cross_pressure_alm.trigger := FALSE;
END_IF

//Instantiate the alarm block, and map the inputs from the OPC GVL
stack_redox_inlet_cross_pressure_alm();
stack_redox_inlet_cross_pressure_alm.alm_ack:=opc.popa_0082_alarm_ack;
stack_redox_inlet_cross_pressure_alm.reset:=opc.popa_0082_alarm_reset;
stack_redox_inlet_cross_pressure_alm.priority:=3;//opc.popa_0082_nv_3372_b_fail_to_close_priority;
stack_redox_inlet_cross_pressure_alm.delay_setpoint:= 3;//opc.popa_0082_nv_3372_b_fail_to_close_delay_setpoint;
stack_redox_inlet_cross_pressure_alm.enable:=TRUE;//opc.popa_0082_nv_3372_b_fail_to_close_enable;

//Place your alarm trigger logic here.  
redox_cross_pressure_cmp :=ABS(((io_mapping.pt_3119_b.scaled_value + io_mapping.pt_3141_b.scaled_value)/2) - io_mapping.pt_3414_b.scaled_value);
IF  redox_cross_pressure_cmp >= 0.2 THEN
	stack_redox_inlet_cross_pressure_alm.trigger := TRUE;
	ELSE
		stack_redox_inlet_cross_pressure_alm.trigger := FALSE;
END_IF


//tt_3340-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3340_b_high_high();
tt_3340_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3340_b_high_high.reset:=opc.popa_0082_alarm_reset;
tt_3340_b_high_high.priority:=opc.popa_0082_tt_3340_b_high_high_priority;
tt_3340_b_high_high.delay_setpoint:=opc.popa_0082_tt_3340_b_high_high_setpoint;
tt_3340_b_high_high.enable:=opc.popa_0082_tt_3340_b_high_high_enable;

//Timer delay elapsed
tt_3340_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3340_b.scaled_value >= opc.popa_0082_tt_3340_b_high_high_setpoint THEN
    tt_3340_b_high_high.trigger := TRUE;
    ELSE
        tt_3340_b_high_high.trigger := FALSE;
END_IF

	
//cct_3120-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3120_b_low();
cct_3120_b_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3120_b_low.reset:=opc.popa_0082_alarm_reset;
cct_3120_b_low.priority:=opc.popa_0082_cct_3120_b_low_priority;
cct_3120_b_low.delay_setpoint:=opc.popa_0082_cct_3120_b_low_setpoint;
cct_3120_b_low.enable:=opc.popa_0082_cct_3120_b_low_enable;

//Timer delay elapsed
cct_3120_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3120_b.scaled_value < opc.popa_0082_cct_3120_b_low_setpoint THEN
    cct_3120_b_low.trigger := TRUE;
    ELSE
        cct_3120_b_low.trigger := FALSE;
END_IF
	
//cct_3120-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3120_b_high();
cct_3120_b_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3120_b_high.reset:=opc.popa_0082_alarm_reset;
cct_3120_b_high.priority:=opc.popa_0082_cct_3120_b_high_priority;
cct_3120_b_high.delay_setpoint:=opc.popa_0082_cct_3120_b_high_setpoint;
cct_3120_b_high.enable:=opc.popa_0082_cct_3120_b_high_enable;

//Timer delay elapsed
cct_3120_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3120_b.scaled_value > opc.popa_0082_cct_3120_b_high_setpoint THEN
    cct_3120_b_high.trigger := TRUE;
    ELSE
        cct_3120_b_high.trigger := FALSE;
END_IF
	
//cct_3120-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3120_b_high_high();
cct_3120_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3120_b_high_high.reset:=opc.popa_0082_alarm_reset;
cct_3120_b_high_high.priority:=opc.popa_0082_cct_3120_b_high_high_priority;
cct_3120_b_high_high.delay_setpoint:=opc.popa_0082_cct_3120_b_high_high_setpoint;
cct_3120_b_high_high.enable:=opc.popa_0082_cct_3120_b_high_high_enable;

//Timer delay elapsed
cct_3120_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3120_b.scaled_value >= opc.popa_0082_cct_3120_b_high_high_setpoint THEN
    cct_3120_b_high_high.trigger := TRUE;
    ELSE
        cct_3120_b_high_high.trigger := FALSE;
END_IF


//cct_3220-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3220_b_low_low();
cct_3220_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3220_b_low_low.reset:=opc.popa_0082_alarm_reset;
cct_3220_b_low_low.priority:=opc.popa_0082_cct_3220_b_low_low_priority;
cct_3220_b_low_low.delay_setpoint:=opc.popa_0082_cct_3220_b_low_low_setpoint;
cct_3220_b_low_low.enable:=opc.popa_0082_cct_3220_b_low_low_enable;

//Timer delay elapsed
cct_3220_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3220_b.scaled_value <= opc.popa_0082_cct_3220_b_low_low_setpoint THEN
    cct_3220_b_low_low.trigger := TRUE;
    ELSE
        cct_3220_b_low_low.trigger := FALSE;
END_IF
	
//cct_3220-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3220_b_low();
cct_3220_b_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3220_b_low.reset:=opc.popa_0082_alarm_reset;
cct_3220_b_low.priority:=opc.popa_0082_cct_3220_b_low_priority;
cct_3220_b_low.delay_setpoint:=opc.popa_0082_cct_3220_b_low_setpoint;
cct_3220_b_low.enable:=opc.popa_0082_cct_3220_b_low_enable;

//Timer delay elapsed
cct_3220_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3220_b.scaled_value < opc.popa_0082_cct_3220_b_low_setpoint THEN
    cct_3220_b_low.trigger := TRUE;
    ELSE
        cct_3220_b_low.trigger := FALSE;
END_IF
	
//cct_3220-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3220_b_high();
cct_3220_b_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3220_b_high.reset:=opc.popa_0082_alarm_reset;
cct_3220_b_high.priority:=opc.popa_0082_cct_3220_b_high_priority;
cct_3220_b_high.delay_setpoint:=opc.popa_0082_cct_3220_b_high_setpoint;
cct_3220_b_high.enable:=opc.popa_0082_cct_3220_b_high_enable;

//Timer delay elapsed
cct_3220_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3220_b.scaled_value > opc.popa_0082_cct_3220_b_high_setpoint THEN
    cct_3220_b_high.trigger := TRUE;
    ELSE
        cct_3220_b_high.trigger := FALSE;
END_IF
	
//cct_3220-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3220_b_high_high();
cct_3220_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3220_b_high_high.reset:=opc.popa_0082_alarm_reset;
cct_3220_b_high_high.priority:=opc.popa_0082_cct_3220_b_high_high_priority;
cct_3220_b_high_high.delay_setpoint:=opc.popa_0082_cct_3220_b_high_high_setpoint;
cct_3220_b_high_high.enable:=opc.popa_0082_cct_3220_b_high_high_enable;

//Timer delay elapsed
cct_3220_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3220_b.scaled_value >= opc.popa_0082_cct_3220_b_high_high_setpoint THEN
    cct_3220_b_high_high.trigger := TRUE;
    ELSE
        cct_3220_b_high_high.trigger := FALSE;
END_IF


//cct_3320-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3320_b_low_low();
cct_3320_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3320_b_low_low.reset:=opc.popa_0082_alarm_reset;
cct_3320_b_low_low.priority:=opc.popa_0082_cct_3320_b_low_low_priority;
cct_3320_b_low_low.delay_setpoint:=opc.popa_0082_cct_3320_b_low_low_setpoint;
cct_3320_b_low_low.enable:=opc.popa_0082_cct_3320_b_low_low_enable;

//Timer delay elapsed
cct_3320_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3320_b.scaled_value <= opc.popa_0082_cct_3320_b_low_low_setpoint THEN
    cct_3320_b_low_low.trigger := TRUE;
    ELSE
        cct_3320_b_low_low.trigger := FALSE;
END_IF
	
//cct_3320-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3320_b_low();
cct_3320_b_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3320_b_low.reset:=opc.popa_0082_alarm_reset;
cct_3320_b_low.priority:=opc.popa_0082_cct_3320_b_low_priority;
cct_3320_b_low.delay_setpoint:=opc.popa_0082_cct_3320_b_low_setpoint;
cct_3320_b_low.enable:=opc.popa_0082_cct_3320_b_low_enable;

//Timer delay elapsed
cct_3320_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3320_b.scaled_value < opc.popa_0082_cct_3320_b_low_setpoint THEN
    cct_3320_b_low.trigger := TRUE;
    ELSE
        cct_3320_b_low.trigger := FALSE;
END_IF
	
//cct_3320-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3320_b_high();
cct_3320_b_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3320_b_high.reset:=opc.popa_0082_alarm_reset;
cct_3320_b_high.priority:=opc.popa_0082_cct_3320_b_high_priority;
cct_3320_b_high.delay_setpoint:=opc.popa_0082_cct_3320_b_high_setpoint;
cct_3320_b_high.enable:=opc.popa_0082_cct_3320_b_high_enable;

//Timer delay elapsed
cct_3320_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3320_b.scaled_value > opc.popa_0082_cct_3320_b_high_setpoint THEN
    cct_3320_b_high.trigger := TRUE;
    ELSE
        cct_3320_b_high.trigger := FALSE;
END_IF
	
//cct_3320-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3320_b_high_high();
cct_3320_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3320_b_high_high.reset:=opc.popa_0082_alarm_reset;
cct_3320_b_high_high.priority:=opc.popa_0082_cct_3320_b_high_high_priority;
cct_3320_b_high_high.delay_setpoint:=opc.popa_0082_cct_3320_b_high_high_setpoint;
cct_3320_b_high_high.enable:=opc.popa_0082_cct_3320_b_high_high_enable;

//Timer delay elapsed
cct_3320_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3320_b.scaled_value >= opc.popa_0082_cct_3320_b_high_high_setpoint THEN
    cct_3320_b_high_high.trigger := TRUE;
    ELSE
        cct_3320_b_high_high.trigger := FALSE;
END_IF


//cct_3142-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3142_b_low_low();
cct_3142_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3142_b_low_low.reset:=opc.popa_0082_alarm_reset;
cct_3142_b_low_low.priority:=opc.popa_0082_cct_3142_b_low_low_priority;
cct_3142_b_low_low.delay_setpoint:=opc.popa_0082_cct_3142_b_low_low_setpoint;
cct_3142_b_low_low.enable:=opc.popa_0082_cct_3142_b_low_low_enable;

//Timer delay elapsed
cct_3142_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3142_b.scaled_value <= opc.popa_0082_cct_3142_b_low_low_setpoint THEN
    cct_3142_b_low_low.trigger := TRUE;
    ELSE
        cct_3142_b_low_low.trigger := FALSE;
END_IF
	
//cct_3142-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3142_b_low();
cct_3142_b_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3142_b_low.reset:=opc.popa_0082_alarm_reset;
cct_3142_b_low.priority:=opc.popa_0082_cct_3142_b_low_priority;
cct_3142_b_low.delay_setpoint:=opc.popa_0082_cct_3142_b_low_setpoint;
cct_3142_b_low.enable:=opc.popa_0082_cct_3142_b_low_enable;

//Timer delay elapsed
cct_3142_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3142_b.scaled_value < opc.popa_0082_cct_3142_b_low_setpoint THEN
    cct_3142_b_low.trigger := TRUE;
    ELSE
        cct_3142_b_low.trigger := FALSE;
END_IF
	
//cct_3142-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3142_b_high();
cct_3142_b_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3142_b_high.reset:=opc.popa_0082_alarm_reset;
cct_3142_b_high.priority:=opc.popa_0082_cct_3142_b_high_priority;
cct_3142_b_high.delay_setpoint:=opc.popa_0082_cct_3142_b_high_setpoint;
cct_3142_b_high.enable:=opc.popa_0082_cct_3142_b_high_enable;

//Timer delay elapsed
cct_3142_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3142_b.scaled_value > opc.popa_0082_cct_3142_b_high_setpoint THEN
    cct_3142_b_high.trigger := TRUE;
    ELSE
        cct_3142_b_high.trigger := FALSE;
END_IF
	
//cct_3142-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3142_b_high_high();
cct_3142_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3142_b_high_high.reset:=opc.popa_0082_alarm_reset;
cct_3142_b_high_high.priority:=opc.popa_0082_cct_3142_b_high_high_priority;
cct_3142_b_high_high.delay_setpoint:=opc.popa_0082_cct_3142_b_high_high_setpoint;
cct_3142_b_high_high.enable:=opc.popa_0082_cct_3142_b_high_high_enable;

//Timer delay elapsed
cct_3142_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3142_b.scaled_value >= opc.popa_0082_cct_3142_b_high_high_setpoint THEN
    cct_3142_b_high_high.trigger := TRUE;
    ELSE
        cct_3142_b_high_high.trigger := FALSE;
END_IF


//cct_3242-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3242_b_low_low();
cct_3242_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3242_b_low_low.reset:=opc.popa_0082_alarm_reset;
cct_3242_b_low_low.priority:=opc.popa_0082_cct_3242_b_low_low_priority;
cct_3242_b_low_low.delay_setpoint:=opc.popa_0082_cct_3242_b_low_low_setpoint;
cct_3242_b_low_low.enable:=opc.popa_0082_cct_3242_b_low_low_enable;

//Timer delay elapsed
cct_3242_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3242_b.scaled_value <= opc.popa_0082_cct_3242_b_low_low_setpoint THEN
    cct_3242_b_low_low.trigger := TRUE;
    ELSE
        cct_3242_b_low_low.trigger := FALSE;
END_IF
	
//cct_3242-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3242_b_low();
cct_3242_b_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3242_b_low.reset:=opc.popa_0082_alarm_reset;
cct_3242_b_low.priority:=opc.popa_0082_cct_3242_b_low_priority;
cct_3242_b_low.delay_setpoint:=opc.popa_0082_cct_3242_b_low_setpoint;
cct_3242_b_low.enable:=opc.popa_0082_cct_3242_b_low_enable;

//Timer delay elapsed
cct_3242_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3242_b.scaled_value < opc.popa_0082_cct_3242_b_low_setpoint THEN
    cct_3242_b_low.trigger := TRUE;
    ELSE
        cct_3242_b_low.trigger := FALSE;
END_IF
	
//cct_3242-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3242_b_high();
cct_3242_b_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3242_b_high.reset:=opc.popa_0082_alarm_reset;
cct_3242_b_high.priority:=opc.popa_0082_cct_3242_b_high_priority;
cct_3242_b_high.delay_setpoint:=opc.popa_0082_cct_3242_b_high_setpoint;
cct_3242_b_high.enable:=opc.popa_0082_cct_3242_b_high_enable;

//Timer delay elapsed
cct_3242_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3242_b.scaled_value > opc.popa_0082_cct_3242_b_high_setpoint THEN
    cct_3242_b_high.trigger := TRUE;
    ELSE
        cct_3242_b_high.trigger := FALSE;
END_IF
	
//cct_3242-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3242_b_high_high();
cct_3242_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3242_b_high_high.reset:=opc.popa_0082_alarm_reset;
cct_3242_b_high_high.priority:=opc.popa_0082_cct_3242_b_high_high_priority;
cct_3242_b_high_high.delay_setpoint:=opc.popa_0082_cct_3242_b_high_high_setpoint;
cct_3242_b_high_high.enable:=opc.popa_0082_cct_3242_b_high_high_enable;

//Timer delay elapsed
cct_3242_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3242_b.scaled_value >= opc.popa_0082_cct_3242_b_high_high_setpoint THEN
    cct_3242_b_high_high.trigger := TRUE;
    ELSE
        cct_3242_b_high_high.trigger := FALSE;
END_IF


//cct_3342-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3342_b_low_low();
cct_3342_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3342_b_low_low.reset:=opc.popa_0082_alarm_reset;
cct_3342_b_low_low.priority:=opc.popa_0082_cct_3342_b_low_low_priority;
cct_3342_b_low_low.delay_setpoint:=opc.popa_0082_cct_3342_b_low_low_setpoint;
cct_3342_b_low_low.enable:=opc.popa_0082_cct_3342_b_low_low_enable;

//Timer delay elapsed
cct_3342_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3342_b.scaled_value <= opc.popa_0082_cct_3342_b_low_low_setpoint THEN
    cct_3342_b_low_low.trigger := TRUE;
    ELSE
        cct_3342_b_low_low.trigger := FALSE;
END_IF
	
//cct_3342-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3342_b_low();
cct_3342_b_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3342_b_low.reset:=opc.popa_0082_alarm_reset;
cct_3342_b_low.priority:=opc.popa_0082_cct_3342_b_low_priority;
cct_3342_b_low.delay_setpoint:=opc.popa_0082_cct_3342_b_low_setpoint;
cct_3342_b_low.enable:=opc.popa_0082_cct_3342_b_low_enable;

//Timer delay elapsed
cct_3342_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3342_b.scaled_value < opc.popa_0082_cct_3342_b_low_setpoint THEN
    cct_3342_b_low.trigger := TRUE;
    ELSE
        cct_3342_b_low.trigger := FALSE;
END_IF
	
//cct_3342-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3342_b_high();
cct_3342_b_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3342_b_high.reset:=opc.popa_0082_alarm_reset;
cct_3342_b_high.priority:=opc.popa_0082_cct_3342_b_high_priority;
cct_3342_b_high.delay_setpoint:=opc.popa_0082_cct_3342_b_high_setpoint;
cct_3342_b_high.enable:=opc.popa_0082_cct_3342_b_high_enable;

//Timer delay elapsed
cct_3342_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3342_b.scaled_value > opc.popa_0082_cct_3342_b_high_setpoint THEN
    cct_3342_b_high.trigger := TRUE;
    ELSE
        cct_3342_b_high.trigger := FALSE;
END_IF
	
//cct_3342-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3342_b_high_high();
cct_3342_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3342_b_high_high.reset:=opc.popa_0082_alarm_reset;
cct_3342_b_high_high.priority:=opc.popa_0082_cct_3342_b_high_high_priority;
cct_3342_b_high_high.delay_setpoint:=opc.popa_0082_cct_3342_b_high_high_setpoint;
cct_3342_b_high_high.enable:=opc.popa_0082_cct_3342_b_high_high_enable;

//Timer delay elapsed
cct_3342_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3342_b.scaled_value >= opc.popa_0082_cct_3342_b_high_high_setpoint THEN
    cct_3342_b_high_high.trigger := TRUE;
    ELSE
        cct_3342_b_high_high.trigger := FALSE;
END_IF

(*
//cct_3413-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3413_b_low_low();
cct_3413_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3413_b_low_low.reset:=opc.popa_0082_alarm_reset;
cct_3413_b_low_low.priority:=opc.popa_0092_cct_3413_b_low_low_priority;
cct_3413_b_low_low.delay_setpoint:=opc.popa_0092_cct_3413_b_low_low_setpoint;
cct_3413_b_low_low.enable:=opc.popa_0092_cct_3413_b_low_low_enable;

//Timer delay elapsed
cct_3413_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3413_b.scaled_value <= opc.popa_0092_cct_3413_b_low_low_setpoint THEN
    cct_3413_b_low_low.trigger := TRUE;
    ELSE
        cct_3413_b_low_low.trigger := FALSE;
END_IF
	
//cct_3413-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3413_b_low();
cct_3413_b_low.alm_ack:=opc.popa_0082_alarm_ack;
cct_3413_b_low.reset:=opc.popa_0082_alarm_reset;
cct_3413_b_low.priority:=opc.popa_0092_cct_3413_b_low_priority;
cct_3413_b_low.delay_setpoint:=opc.popa_0092_cct_3413_b_low_setpoint;
cct_3413_b_low.enable:=opc.popa_0092_cct_3413_b_low_enable;

//Timer delay elapsed
cct_3413_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3413_b.scaled_value < opc.popa_0092_cct_3413_b_low_setpoint THEN
    cct_3413_b_low.trigger := TRUE;
    ELSE
        cct_3413_b_low.trigger := FALSE;
END_IF
	
//cct_3413-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3413_b_high();
cct_3413_b_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3413_b_high.reset:=opc.popa_0082_alarm_reset;
cct_3413_b_high.priority:=opc.popa_0092_cct_3413_b_high_priority;
cct_3413_b_high.delay_setpoint:=opc.popa_0092_cct_3413_b_high_setpoint;
cct_3413_b_high.enable:=opc.popa_0092_cct_3413_b_high_enable;

//Timer delay elapsed
cct_3413_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3413_b.scaled_value > opc.popa_0092_cct_3413_b_high_setpoint THEN
    cct_3413_b_high.trigger := TRUE;
    ELSE
        cct_3413_b_high.trigger := FALSE;
END_IF
	
//cct_3413-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
cct_3413_b_high_high();
cct_3413_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
cct_3413_b_high_high.reset:=opc.popa_0082_alarm_reset;
cct_3413_b_high_high.priority:=opc.popa_0092_cct_3413_b_high_high_priority;
cct_3413_b_high_high.delay_setpoint:=opc.popa_0092_cct_3413_b_high_high_setpoint;
cct_3413_b_high_high.enable:=opc.popa_0092_cct_3413_b_high_high_enable;

//Timer delay elapsed
cct_3413_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.cct_3413_b.scaled_value >= opc.popa_0092_cct_3413_b_high_high_setpoint THEN
    cct_3413_b_high_high.trigger := TRUE;
    ELSE
        cct_3413_b_high_high.trigger := FALSE;
END_IF

*)

//ft_3122-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
ft_3122_b_low_low();
ft_3122_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
ft_3122_b_low_low.reset:=opc.popa_0082_alarm_reset;
ft_3122_b_low_low.priority:=opc.popa_0082_ft_3122_b_low_low_priority;
ft_3122_b_low_low.delay_setpoint:=opc.popa_0082_ft_3122_b_low_low_setpoint;
ft_3122_b_low_low.enable:=opc.popa_0082_ft_3122_b_low_low_enable;

//Timer delay elapsed
ft_3122_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.ft_3122_b.scaled_value <= opc.popa_0082_ft_3122_b_low_low_setpoint THEN
    ft_3122_b_low_low.trigger := TRUE;
    ELSE
        ft_3122_b_low_low.trigger := FALSE;
END_IF
	
//ft_3122-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
ft_3122_b_low();
ft_3122_b_low.alm_ack:=opc.popa_0082_alarm_ack;
ft_3122_b_low.reset:=opc.popa_0082_alarm_reset;
ft_3122_b_low.priority:=opc.popa_0082_ft_3122_b_low_priority;
ft_3122_b_low.delay_setpoint:=opc.popa_0082_ft_3122_b_low_setpoint;
ft_3122_b_low.enable:=opc.popa_0082_ft_3122_b_low_enable;

//Timer delay elapsed
ft_3122_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.ft_3122_b.scaled_value < opc.popa_0082_ft_3122_b_low_setpoint THEN
    ft_3122_b_low.trigger := TRUE;
    ELSE
        ft_3122_b_low.trigger := FALSE;
END_IF
	
//ft_3122-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
ft_3122_b_high();
ft_3122_b_high.alm_ack:=opc.popa_0082_alarm_ack;
ft_3122_b_high.reset:=opc.popa_0082_alarm_reset;
ft_3122_b_high.priority:=opc.popa_0082_ft_3122_b_high_priority;
ft_3122_b_high.delay_setpoint:=opc.popa_0082_ft_3122_b_high_setpoint;
ft_3122_b_high.enable:=opc.popa_0082_ft_3122_b_high_enable;

//Timer delay elapsed
ft_3122_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.ft_3122_b.scaled_value > opc.popa_0082_ft_3122_b_high_setpoint THEN
    ft_3122_b_high.trigger := TRUE;
    ELSE
        ft_3122_b_high.trigger := FALSE;
END_IF
	
//ft_3122-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
ft_3122_b_high_high();
ft_3122_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
ft_3122_b_high_high.reset:=opc.popa_0082_alarm_reset;
ft_3122_b_high_high.priority:=opc.popa_0082_ft_3122_b_high_high_priority;
ft_3122_b_high_high.delay_setpoint:=opc.popa_0082_ft_3122_b_high_high_setpoint;
ft_3122_b_high_high.enable:=opc.popa_0082_ft_3122_b_high_high_enable;

//Timer delay elapsed
ft_3122_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.ft_3122_b.scaled_value >= opc.popa_0082_ft_3122_b_high_high_setpoint THEN
    ft_3122_b_high_high.trigger := TRUE;
    ELSE
        ft_3122_b_high_high.trigger := FALSE;
END_IF


//ft_3222-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
ft_3222_b_low_low();
ft_3222_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
ft_3222_b_low_low.reset:=opc.popa_0082_alarm_reset;
ft_3222_b_low_low.priority:=opc.popa_0082_ft_3222_b_low_low_priority;
ft_3222_b_low_low.delay_setpoint:=opc.popa_0082_ft_3222_b_low_low_setpoint;
ft_3222_b_low_low.enable:=opc.popa_0082_ft_3222_b_low_low_enable;

//Timer delay elapsed
ft_3222_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.ft_3222_b.scaled_value <= opc.popa_0082_ft_3222_b_low_low_setpoint THEN
    ft_3222_b_low_low.trigger := TRUE;
    ELSE
        ft_3222_b_low_low.trigger := FALSE;
END_IF
	
//ft_3222-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
ft_3222_b_low();
ft_3222_b_low.alm_ack:=opc.popa_0082_alarm_ack;
ft_3222_b_low.reset:=opc.popa_0082_alarm_reset;
ft_3222_b_low.priority:=opc.popa_0082_ft_3222_b_low_priority;
ft_3222_b_low.delay_setpoint:=opc.popa_0082_ft_3222_b_low_setpoint;
ft_3222_b_low.enable:=opc.popa_0082_ft_3222_b_low_enable;

//Timer delay elapsed
ft_3222_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.ft_3222_b.scaled_value < opc.popa_0082_ft_3222_b_low_setpoint THEN
    ft_3222_b_low.trigger := TRUE;
    ELSE
        ft_3222_b_low.trigger := FALSE;
END_IF
	
//ft_3222-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
ft_3222_b_high();
ft_3222_b_high.alm_ack:=opc.popa_0082_alarm_ack;
ft_3222_b_high.reset:=opc.popa_0082_alarm_reset;
ft_3222_b_high.priority:=opc.popa_0082_ft_3222_b_high_priority;
ft_3222_b_high.delay_setpoint:=opc.popa_0082_ft_3222_b_high_setpoint;
ft_3222_b_high.enable:=opc.popa_0082_ft_3222_b_high_enable;

//Timer delay elapsed
ft_3222_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.ft_3222_b.scaled_value > opc.popa_0082_ft_3222_b_high_setpoint THEN
    ft_3222_b_high.trigger := TRUE;
    ELSE
        ft_3222_b_high.trigger := FALSE;
END_IF
	
//ft_3222-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
ft_3222_b_high_high();
ft_3222_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
ft_3222_b_high_high.reset:=opc.popa_0082_alarm_reset;
ft_3222_b_high_high.priority:=opc.popa_0082_ft_3222_b_high_high_priority;
ft_3222_b_high_high.delay_setpoint:=opc.popa_0082_ft_3222_b_high_high_setpoint;
ft_3222_b_high_high.enable:=opc.popa_0082_ft_3222_b_high_high_enable;

//Timer delay elapsed
ft_3222_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.ft_3222_b.scaled_value >= opc.popa_0082_ft_3222_b_high_high_setpoint THEN
    ft_3222_b_high_high.trigger := TRUE;
    ELSE
        ft_3222_b_high_high.trigger := FALSE;
END_IF


//ft_3322-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
ft_3322_b_low_low();
ft_3322_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
ft_3322_b_low_low.reset:=opc.popa_0082_alarm_reset;
ft_3322_b_low_low.priority:=opc.popa_0082_ft_3322_b_low_low_priority;
ft_3322_b_low_low.delay_setpoint:=opc.popa_0082_ft_3322_b_low_low_setpoint;
ft_3322_b_low_low.enable:=opc.popa_0082_ft_3322_b_low_low_enable;

//Timer delay elapsed
ft_3322_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.ft_3322_b.scaled_value <= opc.popa_0082_ft_3322_b_low_low_setpoint THEN
    ft_3322_b_low_low.trigger := TRUE;
    ELSE
        ft_3322_b_low_low.trigger := FALSE;
END_IF
	
//ft_3322-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
ft_3322_b_low();
ft_3322_b_low.alm_ack:=opc.popa_0082_alarm_ack;
ft_3322_b_low.reset:=opc.popa_0082_alarm_reset;
ft_3322_b_low.priority:=opc.popa_0082_ft_3322_b_low_priority;
ft_3322_b_low.delay_setpoint:=opc.popa_0082_ft_3322_b_low_setpoint;
ft_3322_b_low.enable:=opc.popa_0082_ft_3322_b_low_enable;

//Timer delay elapsed
ft_3322_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.ft_3322_b.scaled_value < opc.popa_0082_ft_3322_b_low_setpoint THEN
    ft_3322_b_low.trigger := TRUE;
    ELSE
        ft_3322_b_low.trigger := FALSE;
END_IF
	
//ft_3322-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
ft_3322_b_high();
ft_3322_b_high.alm_ack:=opc.popa_0082_alarm_ack;
ft_3322_b_high.reset:=opc.popa_0082_alarm_reset;
ft_3322_b_high.priority:=opc.popa_0082_ft_3322_b_high_priority;
ft_3322_b_high.delay_setpoint:=opc.popa_0082_ft_3322_b_high_setpoint;
ft_3322_b_high.enable:=opc.popa_0082_ft_3322_b_high_enable;

//Timer delay elapsed
ft_3322_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.ft_3322_b.scaled_value > opc.popa_0082_ft_3322_b_high_setpoint THEN
    ft_3322_b_high.trigger := TRUE;
    ELSE
        ft_3322_b_high.trigger := FALSE;
END_IF
	
//ft_3322-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
ft_3322_b_high_high();
ft_3322_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
ft_3322_b_high_high.reset:=opc.popa_0082_alarm_reset;
ft_3322_b_high_high.priority:=opc.popa_0082_ft_3322_b_high_high_priority;
ft_3322_b_high_high.delay_setpoint:=opc.popa_0082_ft_3322_b_high_high_setpoint;
ft_3322_b_high_high.enable:=opc.popa_0082_ft_3322_b_high_high_enable;

//Timer delay elapsed
ft_3322_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.ft_3322_b.scaled_value >= opc.popa_0082_ft_3322_b_high_high_setpoint THEN
    ft_3322_b_high_high.trigger := TRUE;
    ELSE
        ft_3322_b_high_high.trigger := FALSE;
END_IF


//lt_3102-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3102_b_low_low();
lt_3102_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3102_b_low_low.reset:=opc.popa_0082_alarm_reset;
lt_3102_b_low_low.priority:=opc.popa_0082_lt_3102_b_low_low_priority;
lt_3102_b_low_low.delay_setpoint:=opc.popa_0082_lt_3102_b_low_low_setpoint;
lt_3102_b_low_low.enable:=opc.popa_0082_lt_3102_b_low_low_enable;

//Timer delay elapsed
lt_3102_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3102_b.scaled_value <= opc.popa_0082_lt_3102_b_low_low_setpoint THEN
    lt_3102_b_low_low.trigger := TRUE;
    ELSE
        lt_3102_b_low_low.trigger := FALSE;
END_IF
	
//lt_3102-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3102_b_low();
lt_3102_b_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3102_b_low.reset:=opc.popa_0082_alarm_reset;
lt_3102_b_low.priority:=opc.popa_0082_lt_3102_b_low_priority;
lt_3102_b_low.delay_setpoint:=opc.popa_0082_lt_3102_b_low_setpoint;
lt_3102_b_low.enable:=opc.popa_0082_lt_3102_b_low_enable;

//Timer delay elapsed
lt_3102_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3102_b.scaled_value < opc.popa_0082_lt_3102_b_low_setpoint THEN
    lt_3102_b_low.trigger := TRUE;
    ELSE
        lt_3102_b_low.trigger := FALSE;
END_IF
	
//lt_3102-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3102_b_high();
lt_3102_b_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3102_b_high.reset:=opc.popa_0082_alarm_reset;
lt_3102_b_high.priority:=opc.popa_0082_lt_3102_b_high_priority;
lt_3102_b_high.delay_setpoint:=opc.popa_0082_lt_3102_b_high_setpoint;
lt_3102_b_high.enable:=opc.popa_0082_lt_3102_b_high_enable;

//Timer delay elapsed
lt_3102_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3102_b.scaled_value > opc.popa_0082_lt_3102_b_high_setpoint THEN
    lt_3102_b_high.trigger := TRUE;
    ELSE
        lt_3102_b_high.trigger := FALSE;
END_IF
	
//lt_3102-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3102_b_high_high();
lt_3102_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3102_b_high_high.reset:=opc.popa_0082_alarm_reset;
lt_3102_b_high_high.priority:=opc.popa_0082_lt_3102_b_high_high_priority;
lt_3102_b_high_high.delay_setpoint:=opc.popa_0082_lt_3102_b_high_high_setpoint;
lt_3102_b_high_high.enable:=opc.popa_0082_lt_3102_b_high_high_enable;

//Timer delay elapsed
lt_3102_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3102_b.scaled_value >= opc.popa_0082_lt_3102_b_high_high_setpoint THEN
    lt_3102_b_high_high.trigger := TRUE;
    ELSE
        lt_3102_b_high_high.trigger := FALSE;
END_IF


//lt_3202-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3202_b_low_low();
lt_3202_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3202_b_low_low.reset:=opc.popa_0082_alarm_reset;
lt_3202_b_low_low.priority:=opc.popa_0082_lt_3202_b_low_low_priority;
lt_3202_b_low_low.delay_setpoint:=opc.popa_0082_lt_3202_b_low_low_setpoint;
lt_3202_b_low_low.enable:=opc.popa_0082_lt_3202_b_low_low_enable;

//Timer delay elapsed
lt_3202_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3202_b.scaled_value <= opc.popa_0082_lt_3202_b_low_low_setpoint THEN
    lt_3202_b_low_low.trigger := TRUE;
    ELSE
        lt_3202_b_low_low.trigger := FALSE;
END_IF
	
//lt_3202-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3202_b_low();
lt_3202_b_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3202_b_low.reset:=opc.popa_0082_alarm_reset;
lt_3202_b_low.priority:=opc.popa_0082_lt_3202_b_low_priority;
lt_3202_b_low.delay_setpoint:=opc.popa_0082_lt_3202_b_low_setpoint;
lt_3202_b_low.enable:=opc.popa_0082_lt_3202_b_low_enable;

//Timer delay elapsed
lt_3202_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3202_b.scaled_value < opc.popa_0082_lt_3202_b_low_setpoint THEN
    lt_3202_b_low.trigger := TRUE;
    ELSE
        lt_3202_b_low.trigger := FALSE;
END_IF
	
//lt_3202-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3202_b_high();
lt_3202_b_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3202_b_high.reset:=opc.popa_0082_alarm_reset;
lt_3202_b_high.priority:=opc.popa_0082_lt_3202_b_high_priority;
lt_3202_b_high.delay_setpoint:=opc.popa_0082_lt_3202_b_high_setpoint;
lt_3202_b_high.enable:=opc.popa_0082_lt_3202_b_high_enable;

//Timer delay elapsed
lt_3202_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3202_b.scaled_value > opc.popa_0082_lt_3202_b_high_setpoint THEN
    lt_3202_b_high.trigger := TRUE;
    ELSE
        lt_3202_b_high.trigger := FALSE;
END_IF
	
//lt_3202-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3202_b_high_high();
lt_3202_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3202_b_high_high.reset:=opc.popa_0082_alarm_reset;
lt_3202_b_high_high.priority:=opc.popa_0082_lt_3202_b_high_high_priority;
lt_3202_b_high_high.delay_setpoint:=opc.popa_0082_lt_3202_b_high_high_setpoint;
lt_3202_b_high_high.enable:=opc.popa_0082_lt_3202_b_high_high_enable;

//Timer delay elapsed
lt_3202_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3202_b.scaled_value >= opc.popa_0082_lt_3202_b_high_high_setpoint THEN
    lt_3202_b_high_high.trigger := TRUE;
    ELSE
        lt_3202_b_high_high.trigger := FALSE;
END_IF


//lt_3302-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3302_b_low_low();
lt_3302_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3302_b_low_low.reset:=opc.popa_0082_alarm_reset;
lt_3302_b_low_low.priority:=opc.popa_0082_lt_3302_b_low_low_priority;
lt_3302_b_low_low.delay_setpoint:=opc.popa_0082_lt_3302_b_low_low_setpoint;
lt_3302_b_low_low.enable:=opc.popa_0082_lt_3302_b_low_low_enable;

//Timer delay elapsed
lt_3302_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3302_b.scaled_value <= opc.popa_0082_lt_3302_b_low_low_setpoint THEN
    lt_3302_b_low_low.trigger := TRUE;
    ELSE
        lt_3302_b_low_low.trigger := FALSE;
END_IF
	
//lt_3302-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3302_b_low();
lt_3302_b_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3302_b_low.reset:=opc.popa_0082_alarm_reset;
lt_3302_b_low.priority:=opc.popa_0082_lt_3302_b_low_priority;
lt_3302_b_low.delay_setpoint:=opc.popa_0082_lt_3302_b_low_setpoint;
lt_3302_b_low.enable:=opc.popa_0082_lt_3302_b_low_enable;

//Timer delay elapsed
lt_3302_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3302_b.scaled_value < opc.popa_0082_lt_3302_b_low_setpoint THEN
    lt_3302_b_low.trigger := TRUE;
    ELSE
        lt_3302_b_low.trigger := FALSE;
END_IF
	
//lt_3302-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3302_b_high();
lt_3302_b_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3302_b_high.reset:=opc.popa_0082_alarm_reset;
lt_3302_b_high.priority:=opc.popa_0082_lt_3302_b_high_priority;
lt_3302_b_high.delay_setpoint:=opc.popa_0082_lt_3302_b_high_setpoint;
lt_3302_b_high.enable:=opc.popa_0082_lt_3302_b_high_enable;

//Timer delay elapsed
lt_3302_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3302_b.scaled_value > opc.popa_0082_lt_3302_b_high_setpoint THEN
    lt_3302_b_high.trigger := TRUE;
    ELSE
        lt_3302_b_high.trigger := FALSE;
END_IF
	
//lt_3302-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3302_b_high_high();
lt_3302_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3302_b_high_high.reset:=opc.popa_0082_alarm_reset;
lt_3302_b_high_high.priority:=opc.popa_0082_lt_3302_b_high_high_priority;
lt_3302_b_high_high.delay_setpoint:=opc.popa_0082_lt_3302_b_high_high_setpoint;
lt_3302_b_high_high.enable:=opc.popa_0082_lt_3302_b_high_high_enable;

//Timer delay elapsed
lt_3302_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3302_b.scaled_value >= opc.popa_0082_lt_3302_b_high_high_setpoint THEN
    lt_3302_b_high_high.trigger := TRUE;
    ELSE
        lt_3302_b_high_high.trigger := FALSE;
END_IF


//lt_3153-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3153_b_low_low();
lt_3153_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3153_b_low_low.reset:=opc.popa_0082_alarm_reset;
lt_3153_b_low_low.priority:=opc.popa_0082_lt_3153_b_low_low_priority;
lt_3153_b_low_low.delay_setpoint:=opc.popa_0082_lt_3153_b_low_low_setpoint;
lt_3153_b_low_low.enable:=opc.popa_0082_lt_3153_b_low_low_enable;

//Timer delay elapsed
lt_3153_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3153_b.scaled_value <= opc.popa_0082_lt_3153_b_low_low_setpoint THEN
    lt_3153_b_low_low.trigger := TRUE;
    ELSE
        lt_3153_b_low_low.trigger := FALSE;
END_IF
	
//lt_3153-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3153_b_low();
lt_3153_b_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3153_b_low.reset:=opc.popa_0082_alarm_reset;
lt_3153_b_low.priority:=opc.popa_0082_lt_3153_b_low_priority;
lt_3153_b_low.delay_setpoint:=opc.popa_0082_lt_3153_b_low_setpoint;
lt_3153_b_low.enable:=opc.popa_0082_lt_3153_b_low_enable;

//Timer delay elapsed
lt_3153_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3153_b.scaled_value < opc.popa_0082_lt_3153_b_low_setpoint THEN
    lt_3153_b_low.trigger := TRUE;
    ELSE
        lt_3153_b_low.trigger := FALSE;
END_IF
	
//lt_3153-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3153_b_high();
lt_3153_b_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3153_b_high.reset:=opc.popa_0082_alarm_reset;
lt_3153_b_high.priority:=opc.popa_0082_lt_3153_b_high_priority;
lt_3153_b_high.delay_setpoint:=opc.popa_0082_lt_3153_b_high_setpoint;
lt_3153_b_high.enable:=opc.popa_0082_lt_3153_b_high_enable;

//Timer delay elapsed
lt_3153_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3153_b.scaled_value > opc.popa_0082_lt_3153_b_high_setpoint THEN
    lt_3153_b_high.trigger := TRUE;
    ELSE
        lt_3153_b_high.trigger := FALSE;
END_IF
	
//lt_3153-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3153_b_high_high();
lt_3153_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3153_b_high_high.reset:=opc.popa_0082_alarm_reset;
lt_3153_b_high_high.priority:=opc.popa_0082_lt_3153_b_high_high_priority;
lt_3153_b_high_high.delay_setpoint:=opc.popa_0082_lt_3153_b_high_high_setpoint;
lt_3153_b_high_high.enable:=opc.popa_0082_lt_3153_b_high_high_enable;

//Timer delay elapsed
lt_3153_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3153_b.scaled_value >= opc.popa_0082_lt_3153_b_high_high_setpoint THEN
    lt_3153_b_high_high.trigger := TRUE;
    ELSE
        lt_3153_b_high_high.trigger := FALSE;
END_IF


//lt_3253-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3253_b_low_low();
lt_3253_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3253_b_low_low.reset:=opc.popa_0082_alarm_reset;
lt_3253_b_low_low.priority:=opc.popa_0082_lt_3253_b_low_low_priority;
lt_3253_b_low_low.delay_setpoint:=opc.popa_0082_lt_3253_b_low_low_setpoint;
lt_3253_b_low_low.enable:=opc.popa_0082_lt_3253_b_low_low_enable;

//Timer delay elapsed
lt_3253_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3253_b.scaled_value <= opc.popa_0082_lt_3253_b_low_low_setpoint THEN
    lt_3253_b_low_low.trigger := TRUE;
    ELSE
        lt_3253_b_low_low.trigger := FALSE;
END_IF
	
//lt_3253-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3253_b_low();
lt_3253_b_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3253_b_low.reset:=opc.popa_0082_alarm_reset;
lt_3253_b_low.priority:=opc.popa_0082_lt_3253_b_low_priority;
lt_3253_b_low.delay_setpoint:=opc.popa_0082_lt_3253_b_low_setpoint;
lt_3253_b_low.enable:=opc.popa_0082_lt_3253_b_low_enable;

//Timer delay elapsed
lt_3253_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3253_b.scaled_value < opc.popa_0082_lt_3253_b_low_setpoint THEN
    lt_3253_b_low.trigger := TRUE;
    ELSE
        lt_3253_b_low.trigger := FALSE;
END_IF
	
//lt_3253-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3253_b_high();
lt_3253_b_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3253_b_high.reset:=opc.popa_0082_alarm_reset;
lt_3253_b_high.priority:=opc.popa_0082_lt_3253_b_high_priority;
lt_3253_b_high.delay_setpoint:=opc.popa_0082_lt_3253_b_high_setpoint;
lt_3253_b_high.enable:=opc.popa_0082_lt_3253_b_high_enable;

//Timer delay elapsed
lt_3253_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3253_b.scaled_value > opc.popa_0082_lt_3253_b_high_setpoint THEN
    lt_3253_b_high.trigger := TRUE;
    ELSE
        lt_3253_b_high.trigger := FALSE;
END_IF
	
//lt_3253-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3253_b_high_high();
lt_3253_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3253_b_high_high.reset:=opc.popa_0082_alarm_reset;
lt_3253_b_high_high.priority:=opc.popa_0082_lt_3253_b_high_high_priority;
lt_3253_b_high_high.delay_setpoint:=opc.popa_0082_lt_3253_b_high_high_setpoint;
lt_3253_b_high_high.enable:=opc.popa_0082_lt_3253_b_high_high_enable;

//Timer delay elapsed
lt_3253_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3253_b.scaled_value >= opc.popa_0082_lt_3253_b_high_high_setpoint THEN
    lt_3253_b_high_high.trigger := TRUE;
    ELSE
        lt_3253_b_high_high.trigger := FALSE;
END_IF


//lt_3353-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3353_b_low_low();
lt_3353_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3353_b_low_low.reset:=opc.popa_0082_alarm_reset;
lt_3353_b_low_low.priority:=opc.popa_0082_lt_3353_b_low_low_priority;
lt_3353_b_low_low.delay_setpoint:=opc.popa_0082_lt_3353_b_low_low_setpoint;
lt_3353_b_low_low.enable:=opc.popa_0082_lt_3353_b_low_low_enable;

//Timer delay elapsed
lt_3353_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3353_b.scaled_value <= opc.popa_0082_lt_3353_b_low_low_setpoint THEN
    lt_3353_b_low_low.trigger := TRUE;
    ELSE
        lt_3353_b_low_low.trigger := FALSE;
END_IF
	
//lt_3353-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3353_b_low();
lt_3353_b_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3353_b_low.reset:=opc.popa_0082_alarm_reset;
lt_3353_b_low.priority:=opc.popa_0082_lt_3353_b_low_priority;
lt_3353_b_low.delay_setpoint:=opc.popa_0082_lt_3353_b_low_setpoint;
lt_3353_b_low.enable:=opc.popa_0082_lt_3353_b_low_enable;

//Timer delay elapsed
lt_3353_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3353_b.scaled_value < opc.popa_0082_lt_3353_b_low_setpoint THEN
    lt_3353_b_low.trigger := TRUE;
    ELSE
        lt_3353_b_low.trigger := FALSE;
END_IF
	
//lt_3353-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3353_b_high();
lt_3353_b_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3353_b_high.reset:=opc.popa_0082_alarm_reset;
lt_3353_b_high.priority:=opc.popa_0082_lt_3353_b_high_priority;
lt_3353_b_high.delay_setpoint:=opc.popa_0082_lt_3353_b_high_setpoint;
lt_3353_b_high.enable:=opc.popa_0082_lt_3353_b_high_enable;

//Timer delay elapsed
lt_3353_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3353_b.scaled_value > opc.popa_0082_lt_3353_b_high_setpoint THEN
    lt_3353_b_high.trigger := TRUE;
    ELSE
        lt_3353_b_high.trigger := FALSE;
END_IF
	
//lt_3353-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3353_b_high_high();
lt_3353_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3353_b_high_high.reset:=opc.popa_0082_alarm_reset;
lt_3353_b_high_high.priority:=opc.popa_0082_lt_3353_b_high_high_priority;
lt_3353_b_high_high.delay_setpoint:=opc.popa_0082_lt_3353_b_high_high_setpoint;
lt_3353_b_high_high.enable:=opc.popa_0082_lt_3353_b_high_high_enable;

//Timer delay elapsed
lt_3353_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3353_b.scaled_value >= opc.popa_0082_lt_3353_b_high_high_setpoint THEN
    lt_3353_b_high_high.trigger := TRUE;
    ELSE
        lt_3353_b_high_high.trigger := FALSE;
END_IF


//lt_3402-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3402_b_low_low();
lt_3402_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3402_b_low_low.reset:=opc.popa_0082_alarm_reset;
lt_3402_b_low_low.priority:=opc.popa_0092_lt_3402_b_low_low_priority;
lt_3402_b_low_low.delay_setpoint:=opc.popa_0092_lt_3402_b_low_low_setpoint;
lt_3402_b_low_low.enable:=opc.popa_0092_lt_3402_b_low_low_enable;

//Timer delay elapsed
lt_3402_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3402_b.scaled_value <= opc.popa_0092_lt_3402_b_low_low_setpoint THEN
    lt_3402_b_low_low.trigger := TRUE;
    ELSE
        lt_3402_b_low_low.trigger := FALSE;
END_IF
	
//lt_3402-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3402_b_low();
lt_3402_b_low.alm_ack:=opc.popa_0082_alarm_ack;
lt_3402_b_low.reset:=opc.popa_0082_alarm_reset;
lt_3402_b_low.priority:=opc.popa_0092_lt_3402_b_low_priority;
lt_3402_b_low.delay_setpoint:=opc.popa_0092_lt_3402_b_low_setpoint;
lt_3402_b_low.enable:=opc.popa_0092_lt_3402_b_low_enable;

//Timer delay elapsed
lt_3402_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3402_b.scaled_value < opc.popa_0092_lt_3402_b_low_setpoint THEN
    lt_3402_b_low.trigger := TRUE;
    ELSE
        lt_3402_b_low.trigger := FALSE;
END_IF
	
//lt_3402-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3402_b_high();
lt_3402_b_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3402_b_high.reset:=opc.popa_0082_alarm_reset;
lt_3402_b_high.priority:=opc.popa_0092_lt_3402_b_high_priority;
lt_3402_b_high.delay_setpoint:=opc.popa_0092_lt_3402_b_high_setpoint;
lt_3402_b_high.enable:=opc.popa_0092_lt_3402_b_high_enable;

//Timer delay elapsed
lt_3402_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3402_b.scaled_value > opc.popa_0092_lt_3402_b_high_setpoint THEN
    lt_3402_b_high.trigger := TRUE;
    ELSE
        lt_3402_b_high.trigger := FALSE;
END_IF
	
//lt_3402-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
lt_3402_b_high_high();
lt_3402_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
lt_3402_b_high_high.reset:=opc.popa_0082_alarm_reset;
lt_3402_b_high_high.priority:=opc.popa_0092_lt_3402_b_high_high_priority;
lt_3402_b_high_high.delay_setpoint:=opc.popa_0092_lt_3402_b_high_high_setpoint;
lt_3402_b_high_high.enable:=opc.popa_0092_lt_3402_b_high_high_enable;

//Timer delay elapsed
lt_3402_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.lt_3402_b.scaled_value >= opc.popa_0092_lt_3402_b_high_high_setpoint THEN
    lt_3402_b_high_high.trigger := TRUE;
    ELSE
        lt_3402_b_high_high.trigger := FALSE;
END_IF


//pt_3119-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3119_b_low_low();
pt_3119_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3119_b_low_low.reset:=opc.popa_0082_alarm_reset;
pt_3119_b_low_low.priority:=opc.popa_0082_pt_3119_b_low_low_priority;
pt_3119_b_low_low.delay_setpoint:=opc.popa_0082_pt_3119_b_low_low_setpoint;
pt_3119_b_low_low.enable:=opc.popa_0082_pt_3119_b_low_low_enable;

//Timer delay elapsed
pt_3119_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3119_b.scaled_value <= opc.popa_0082_pt_3119_b_low_low_setpoint THEN
    pt_3119_b_low_low.trigger := TRUE;
    ELSE
        pt_3119_b_low_low.trigger := FALSE;
END_IF
	
//pt_3119-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3119_b_low();
pt_3119_b_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3119_b_low.reset:=opc.popa_0082_alarm_reset;
pt_3119_b_low.priority:=opc.popa_0082_pt_3119_b_low_priority;
pt_3119_b_low.delay_setpoint:=opc.popa_0082_pt_3119_b_low_setpoint;
pt_3119_b_low.enable:=opc.popa_0082_pt_3119_b_low_enable;

//Timer delay elapsed
pt_3119_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3119_b.scaled_value < opc.popa_0082_pt_3119_b_low_setpoint THEN
    pt_3119_b_low.trigger := TRUE;
    ELSE
        pt_3119_b_low.trigger := FALSE;
END_IF
	
//pt_3119-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3119_b_high();
pt_3119_b_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3119_b_high.reset:=opc.popa_0082_alarm_reset;
pt_3119_b_high.priority:=opc.popa_0082_pt_3119_b_high_priority;
pt_3119_b_high.delay_setpoint:=opc.popa_0082_pt_3119_b_high_setpoint;
pt_3119_b_high.enable:=opc.popa_0082_pt_3119_b_high_enable;

//Timer delay elapsed
pt_3119_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3119_b.scaled_value > opc.popa_0082_pt_3119_b_high_setpoint THEN
    pt_3119_b_high.trigger := TRUE;
    ELSE
        pt_3119_b_high.trigger := FALSE;
END_IF
	
//pt_3119-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3119_b_high_high();
pt_3119_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3119_b_high_high.reset:=opc.popa_0082_alarm_reset;
pt_3119_b_high_high.priority:=opc.popa_0082_pt_3119_b_high_high_priority;
pt_3119_b_high_high.delay_setpoint:=opc.popa_0082_pt_3119_b_high_high_setpoint;
pt_3119_b_high_high.enable:=opc.popa_0082_pt_3119_b_high_high_enable;

//Timer delay elapsed
pt_3119_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3119_b.scaled_value >= opc.popa_0082_pt_3119_b_high_high_setpoint THEN
    pt_3119_b_high_high.trigger := TRUE;
    ELSE
        pt_3119_b_high_high.trigger := FALSE;
END_IF


//pt_3219-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3219_b_low_low();
pt_3219_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3219_b_low_low.reset:=opc.popa_0082_alarm_reset;
pt_3219_b_low_low.priority:=opc.popa_0082_pt_3219_b_low_low_priority;
pt_3219_b_low_low.delay_setpoint:=opc.popa_0082_pt_3219_b_low_low_setpoint;
pt_3219_b_low_low.enable:=opc.popa_0082_pt_3219_b_low_low_enable;

//Timer delay elapsed
pt_3219_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3219_b.scaled_value <= opc.popa_0082_pt_3219_b_low_low_setpoint THEN
    pt_3219_b_low_low.trigger := TRUE;
    ELSE
        pt_3219_b_low_low.trigger := FALSE;
END_IF
	
//pt_3219-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3219_b_low();
pt_3219_b_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3219_b_low.reset:=opc.popa_0082_alarm_reset;
pt_3219_b_low.priority:=opc.popa_0082_pt_3219_b_low_priority;
pt_3219_b_low.delay_setpoint:=opc.popa_0082_pt_3219_b_low_setpoint;
pt_3219_b_low.enable:=opc.popa_0082_pt_3219_b_low_enable;

//Timer delay elapsed
pt_3219_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3219_b.scaled_value < opc.popa_0082_pt_3219_b_low_setpoint THEN
    pt_3219_b_low.trigger := TRUE;
    ELSE
        pt_3219_b_low.trigger := FALSE;
END_IF
	
//pt_3219-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3219_b_high();
pt_3219_b_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3219_b_high.reset:=opc.popa_0082_alarm_reset;
pt_3219_b_high.priority:=opc.popa_0082_pt_3219_b_high_priority;
pt_3219_b_high.delay_setpoint:=opc.popa_0082_pt_3219_b_high_setpoint;
pt_3219_b_high.enable:=opc.popa_0082_pt_3219_b_high_enable;

//Timer delay elapsed
pt_3219_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3219_b.scaled_value > opc.popa_0082_pt_3219_b_high_setpoint THEN
    pt_3219_b_high.trigger := TRUE;
    ELSE
        pt_3219_b_high.trigger := FALSE;
END_IF
	
//pt_3219-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3219_b_high_high();
pt_3219_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3219_b_high_high.reset:=opc.popa_0082_alarm_reset;
pt_3219_b_high_high.priority:=opc.popa_0082_pt_3219_b_high_high_priority;
pt_3219_b_high_high.delay_setpoint:=opc.popa_0082_pt_3219_b_high_high_setpoint;
pt_3219_b_high_high.enable:=opc.popa_0082_pt_3219_b_high_high_enable;

//Timer delay elapsed
pt_3219_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3219_b.scaled_value >= opc.popa_0082_pt_3219_b_high_high_setpoint THEN
    pt_3219_b_high_high.trigger := TRUE;
    ELSE
        pt_3219_b_high_high.trigger := FALSE;
END_IF


//pt_3319-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3319_b_low_low();
pt_3319_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3319_b_low_low.reset:=opc.popa_0082_alarm_reset;
pt_3319_b_low_low.priority:=opc.popa_0082_pt_3319_b_low_low_priority;
pt_3319_b_low_low.delay_setpoint:=opc.popa_0082_pt_3319_b_low_low_setpoint;
pt_3319_b_low_low.enable:=opc.popa_0082_pt_3319_b_low_low_enable;

//Timer delay elapsed
pt_3319_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3319_b.scaled_value <= opc.popa_0082_pt_3319_b_low_low_setpoint THEN
    pt_3319_b_low_low.trigger := TRUE;
    ELSE
        pt_3319_b_low_low.trigger := FALSE;
END_IF
	
//pt_3319-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3319_b_low();
pt_3319_b_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3319_b_low.reset:=opc.popa_0082_alarm_reset;
pt_3319_b_low.priority:=opc.popa_0082_pt_3319_b_low_priority;
pt_3319_b_low.delay_setpoint:=opc.popa_0082_pt_3319_b_low_setpoint;
pt_3319_b_low.enable:=opc.popa_0082_pt_3319_b_low_enable;

//Timer delay elapsed
pt_3319_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3319_b.scaled_value < opc.popa_0082_pt_3319_b_low_setpoint THEN
    pt_3319_b_low.trigger := TRUE;
    ELSE
        pt_3319_b_low.trigger := FALSE;
END_IF
	
//pt_3319-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3319_b_high();
pt_3319_b_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3319_b_high.reset:=opc.popa_0082_alarm_reset;
pt_3319_b_high.priority:=opc.popa_0082_pt_3319_b_high_priority;
pt_3319_b_high.delay_setpoint:=opc.popa_0082_pt_3319_b_high_setpoint;
pt_3319_b_high.enable:=opc.popa_0082_pt_3319_b_high_enable;

//Timer delay elapsed
pt_3319_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3319_b.scaled_value > opc.popa_0082_pt_3319_b_high_setpoint THEN
    pt_3319_b_high.trigger := TRUE;
    ELSE
        pt_3319_b_high.trigger := FALSE;
END_IF
	
//pt_3319-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3319_b_high_high();
pt_3319_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3319_b_high_high.reset:=opc.popa_0082_alarm_reset;
pt_3319_b_high_high.priority:=opc.popa_0082_pt_3319_b_high_high_priority;
pt_3319_b_high_high.delay_setpoint:=opc.popa_0082_pt_3319_b_high_high_setpoint;
pt_3319_b_high_high.enable:=opc.popa_0082_pt_3319_b_high_high_enable;

//Timer delay elapsed
pt_3319_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3319_b.scaled_value >= opc.popa_0082_pt_3319_b_high_high_setpoint THEN
    pt_3319_b_high_high.trigger := TRUE;
    ELSE
        pt_3319_b_high_high.trigger := FALSE;
END_IF


//pt_3141-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3141_b_low_low();
pt_3141_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3141_b_low_low.reset:=opc.popa_0082_alarm_reset;
pt_3141_b_low_low.priority:=opc.popa_0082_pt_3141_b_low_low_priority;
pt_3141_b_low_low.delay_setpoint:=opc.popa_0082_pt_3141_b_low_low_setpoint;
pt_3141_b_low_low.enable:=opc.popa_0082_pt_3141_b_low_low_enable;

//Timer delay elapsed
pt_3141_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3141_b.scaled_value <= opc.popa_0082_pt_3141_b_low_low_setpoint THEN
    pt_3141_b_low_low.trigger := TRUE;
    ELSE
        pt_3141_b_low_low.trigger := FALSE;
END_IF
	
//pt_3141-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3141_b_low();
pt_3141_b_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3141_b_low.reset:=opc.popa_0082_alarm_reset;
pt_3141_b_low.priority:=opc.popa_0082_pt_3141_b_low_priority;
pt_3141_b_low.delay_setpoint:=opc.popa_0082_pt_3141_b_low_setpoint;
pt_3141_b_low.enable:=opc.popa_0082_pt_3141_b_low_enable;

//Timer delay elapsed
pt_3141_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3141_b.scaled_value < opc.popa_0082_pt_3141_b_low_setpoint THEN
    pt_3141_b_low.trigger := TRUE;
    ELSE
        pt_3141_b_low.trigger := FALSE;
END_IF
	
//pt_3141-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3141_b_high();
pt_3141_b_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3141_b_high.reset:=opc.popa_0082_alarm_reset;
pt_3141_b_high.priority:=opc.popa_0082_pt_3141_b_high_priority;
pt_3141_b_high.delay_setpoint:=opc.popa_0082_pt_3141_b_high_setpoint;
pt_3141_b_high.enable:=opc.popa_0082_pt_3141_b_high_enable;

//Timer delay elapsed
pt_3141_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3141_b.scaled_value > opc.popa_0082_pt_3141_b_high_setpoint THEN
    pt_3141_b_high.trigger := TRUE;
    ELSE
        pt_3141_b_high.trigger := FALSE;
END_IF
	
//pt_3141-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3141_b_high_high();
pt_3141_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3141_b_high_high.reset:=opc.popa_0082_alarm_reset;
pt_3141_b_high_high.priority:=opc.popa_0082_pt_3141_b_high_high_priority;
pt_3141_b_high_high.delay_setpoint:=opc.popa_0082_pt_3141_b_high_high_setpoint;
pt_3141_b_high_high.enable:=opc.popa_0082_pt_3141_b_high_high_enable;

//Timer delay elapsed
pt_3141_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3141_b.scaled_value >= opc.popa_0082_pt_3141_b_high_high_setpoint THEN
    pt_3141_b_high_high.trigger := TRUE;
    ELSE
        pt_3141_b_high_high.trigger := FALSE;
END_IF


//pt_3241-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3241_b_low_low();
pt_3241_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3241_b_low_low.reset:=opc.popa_0082_alarm_reset;
pt_3241_b_low_low.priority:=opc.popa_0082_pt_3241_b_low_low_priority;
pt_3241_b_low_low.delay_setpoint:=opc.popa_0082_pt_3241_b_low_low_setpoint;
pt_3241_b_low_low.enable:=opc.popa_0082_pt_3241_b_low_low_enable;

//Timer delay elapsed
pt_3241_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3241_b.scaled_value <= opc.popa_0082_pt_3241_b_low_low_setpoint THEN
    pt_3241_b_low_low.trigger := TRUE;
    ELSE
        pt_3241_b_low_low.trigger := FALSE;
END_IF
	
//pt_3241-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3241_b_low();
pt_3241_b_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3241_b_low.reset:=opc.popa_0082_alarm_reset;
pt_3241_b_low.priority:=opc.popa_0082_pt_3241_b_low_priority;
pt_3241_b_low.delay_setpoint:=opc.popa_0082_pt_3241_b_low_setpoint;
pt_3241_b_low.enable:=opc.popa_0082_pt_3241_b_low_enable;

//Timer delay elapsed
pt_3241_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3241_b.scaled_value < opc.popa_0082_pt_3241_b_low_setpoint THEN
    pt_3241_b_low.trigger := TRUE;
    ELSE
        pt_3241_b_low.trigger := FALSE;
END_IF
	
//pt_3241-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3241_b_high();
pt_3241_b_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3241_b_high.reset:=opc.popa_0082_alarm_reset;
pt_3241_b_high.priority:=opc.popa_0082_pt_3241_b_high_priority;
pt_3241_b_high.delay_setpoint:=opc.popa_0082_pt_3241_b_high_setpoint;
pt_3241_b_high.enable:=opc.popa_0082_pt_3241_b_high_enable;

//Timer delay elapsed
pt_3241_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3241_b.scaled_value > opc.popa_0082_pt_3241_b_high_setpoint THEN
    pt_3241_b_high.trigger := TRUE;
    ELSE
        pt_3241_b_high.trigger := FALSE;
END_IF
	
//pt_3241-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3241_b_high_high();
pt_3241_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3241_b_high_high.reset:=opc.popa_0082_alarm_reset;
pt_3241_b_high_high.priority:=opc.popa_0082_pt_3241_b_high_high_priority;
pt_3241_b_high_high.delay_setpoint:=opc.popa_0082_pt_3241_b_high_high_setpoint;
pt_3241_b_high_high.enable:=opc.popa_0082_pt_3241_b_high_high_enable;

//Timer delay elapsed
pt_3241_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3241_b.scaled_value >= opc.popa_0082_pt_3241_b_high_high_setpoint THEN
    pt_3241_b_high_high.trigger := TRUE;
    ELSE
        pt_3241_b_high_high.trigger := FALSE;
END_IF


//pt_3341-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3341_b_low_low();
pt_3341_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3341_b_low_low.reset:=opc.popa_0082_alarm_reset;
pt_3341_b_low_low.priority:=opc.popa_0082_pt_3341_b_low_low_priority;
pt_3341_b_low_low.delay_setpoint:=opc.popa_0082_pt_3341_b_low_low_setpoint;
pt_3341_b_low_low.enable:=opc.popa_0082_pt_3341_b_low_low_enable;

//Timer delay elapsed
pt_3341_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3341_b.scaled_value <= opc.popa_0082_pt_3341_b_low_low_setpoint THEN
    pt_3341_b_low_low.trigger := TRUE;
    ELSE
        pt_3341_b_low_low.trigger := FALSE;
END_IF
	
//pt_3341-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3341_b_low();
pt_3341_b_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3341_b_low.reset:=opc.popa_0082_alarm_reset;
pt_3341_b_low.priority:=opc.popa_0082_pt_3341_b_low_priority;
pt_3341_b_low.delay_setpoint:=opc.popa_0082_pt_3341_b_low_setpoint;
pt_3341_b_low.enable:=opc.popa_0082_pt_3341_b_low_enable;

//Timer delay elapsed
pt_3341_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3341_b.scaled_value < opc.popa_0082_pt_3341_b_low_setpoint THEN
    pt_3341_b_low.trigger := TRUE;
    ELSE
        pt_3341_b_low.trigger := FALSE;
END_IF
	
//pt_3341-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3341_b_high();
pt_3341_b_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3341_b_high.reset:=opc.popa_0082_alarm_reset;
pt_3341_b_high.priority:=opc.popa_0082_pt_3341_b_high_priority;
pt_3341_b_high.delay_setpoint:=opc.popa_0082_pt_3341_b_high_setpoint;
pt_3341_b_high.enable:=opc.popa_0082_pt_3341_b_high_enable;

//Timer delay elapsed
pt_3341_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3341_b.scaled_value > opc.popa_0082_pt_3341_b_high_setpoint THEN
    pt_3341_b_high.trigger := TRUE;
    ELSE
        pt_3341_b_high.trigger := FALSE;
END_IF
	
//pt_3341-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3341_b_high_high();
pt_3341_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3341_b_high_high.reset:=opc.popa_0082_alarm_reset;
pt_3341_b_high_high.priority:=opc.popa_0082_pt_3341_b_high_high_priority;
pt_3341_b_high_high.delay_setpoint:=opc.popa_0082_pt_3341_b_high_high_setpoint;
pt_3341_b_high_high.enable:=opc.popa_0082_pt_3341_b_high_high_enable;

//Timer delay elapsed
pt_3341_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3341_b.scaled_value >= opc.popa_0082_pt_3341_b_high_high_setpoint THEN
    pt_3341_b_high_high.trigger := TRUE;
    ELSE
        pt_3341_b_high_high.trigger := FALSE;
END_IF


//pt_3414-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3414_b_low_low();
pt_3414_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3414_b_low_low.reset:=opc.popa_0082_alarm_reset;
pt_3414_b_low_low.priority:=opc.popa_0092_pt_3414_b_low_low_priority;
pt_3414_b_low_low.delay_setpoint:=opc.popa_0092_pt_3414_b_low_low_setpoint;
pt_3414_b_low_low.enable:=opc.popa_0092_pt_3414_b_low_low_enable;

//Timer delay elapsed
pt_3414_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3414_b.scaled_value <= opc.popa_0092_pt_3414_b_low_low_setpoint THEN
    pt_3414_b_low_low.trigger := TRUE;
    ELSE
        pt_3414_b_low_low.trigger := FALSE;
END_IF
	
//pt_3414-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3414_b_low();
pt_3414_b_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3414_b_low.reset:=opc.popa_0082_alarm_reset;
pt_3414_b_low.priority:=opc.popa_0092_pt_3414_b_low_priority;
pt_3414_b_low.delay_setpoint:=opc.popa_0092_pt_3414_b_low_setpoint;
pt_3414_b_low.enable:=opc.popa_0092_pt_3414_b_low_enable;

//Timer delay elapsed
pt_3414_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3414_b.scaled_value < opc.popa_0092_pt_3414_b_low_setpoint THEN
    pt_3414_b_low.trigger := TRUE;
    ELSE
        pt_3414_b_low.trigger := FALSE;
END_IF
	
//pt_3414-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3414_b_high();
pt_3414_b_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3414_b_high.reset:=opc.popa_0082_alarm_reset;
pt_3414_b_high.priority:=opc.popa_0092_pt_3414_b_high_priority;
pt_3414_b_high.delay_setpoint:=opc.popa_0092_pt_3414_b_high_setpoint;
pt_3414_b_high.enable:=opc.popa_0092_pt_3414_b_high_enable;

//Timer delay elapsed
pt_3414_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3414_b.scaled_value > opc.popa_0092_pt_3414_b_high_setpoint THEN
    pt_3414_b_high.trigger := TRUE;
    ELSE
        pt_3414_b_high.trigger := FALSE;
END_IF
	
//pt_3414-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3414_b_high_high();
pt_3414_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3414_b_high_high.reset:=opc.popa_0082_alarm_reset;
pt_3414_b_high_high.priority:=opc.popa_0092_pt_3414_b_high_high_priority;
pt_3414_b_high_high.delay_setpoint:=opc.popa_0092_pt_3414_b_high_high_setpoint;
pt_3414_b_high_high.enable:=opc.popa_0092_pt_3414_b_high_high_enable;

//Timer delay elapsed
pt_3414_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3414_b.scaled_value >= opc.popa_0092_pt_3414_b_high_high_setpoint THEN
    pt_3414_b_high_high.trigger := TRUE;
    ELSE
        pt_3414_b_high_high.trigger := FALSE;
END_IF

(*

//pt_3428-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3428_b_low_low();
pt_3428_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3428_b_low_low.reset:=opc.popa_0082_alarm_reset;
pt_3428_b_low_low.priority:=opc.popa_0082_pt_3428_b_low_low_priority;
pt_3428_b_low_low.delay_setpoint:=opc.popa_0082_pt_3428_b_low_low_setpoint;
pt_3428_b_low_low.enable:=opc.popa_0082_pt_3428_b_low_low_enable;

//Timer delay elapsed
pt_3428_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3428.scaled_value <= opc.popa_0082_pt_3428_b_low_low_setpoint THEN
    pt_3428_b_low_low.trigger := TRUE;
    ELSE
        pt_3428_b_low_low.trigger := FALSE;
END_IF
	
//pt_3428-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3428_b_low();
pt_3428_b_low.alm_ack:=opc.popa_0082_alarm_ack;
pt_3428_b_low.reset:=opc.popa_0082_alarm_reset;
pt_3428_b_low.priority:=opc.popa_0082_pt_3428_b_low_priority;
pt_3428_b_low.delay_setpoint:=opc.popa_0082_pt_3428_b_low_setpoint;
pt_3428_b_low.enable:=opc.popa_0082_pt_3428_b_low_enable;

//Timer delay elapsed
pt_3428_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3428.scaled_value < opc.popa_0082_pt_3428_b_low_setpoint THEN
    pt_3428_b_low.trigger := TRUE;
    ELSE
        pt_3428_b_low.trigger := FALSE;
END_IF
	
//pt_3428-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3428_b_high();
pt_3428_b_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3428_b_high.reset:=opc.popa_0082_alarm_reset;
pt_3428_b_high.priority:=opc.popa_0082_pt_3428_b_high_priority;
pt_3428_b_high.delay_setpoint:=opc.popa_0082_pt_3428_b_high_setpoint;
pt_3428_b_high.enable:=opc.popa_0082_pt_3428_b_high_enable;

//Timer delay elapsed
pt_3428_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3428.scaled_value > opc.popa_0082_pt_3428_b_high_setpoint THEN
    pt_3428_b_high.trigger := TRUE;
    ELSE
        pt_3428_b_high.trigger := FALSE;
END_IF
	
//pt_3428-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
pt_3428_b_high_high();
pt_3428_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
pt_3428_b_high_high.reset:=opc.popa_0082_alarm_reset;
pt_3428_b_high_high.priority:=opc.popa_0082_pt_3428_b_high_high_priority;
pt_3428_b_high_high.delay_setpoint:=opc.popa_0082_pt_3428_b_high_high_setpoint;
pt_3428_b_high_high.enable:=opc.popa_0082_pt_3428_b_high_high_enable;

//Timer delay elapsed
pt_3428_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.pt_3428.scaled_value >= opc.popa_0082_pt_3428_b_high_high_setpoint THEN
    pt_3428_b_high_high.trigger := TRUE;
    ELSE
        pt_3428_b_high_high.trigger := FALSE;
END_IF

*)
//tt_3118-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3118_b_low_low();
tt_3118_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3118_b_low_low.reset:=opc.popa_0082_alarm_reset;
tt_3118_b_low_low.priority:=opc.popa_0082_tt_3118_b_low_low_priority;
tt_3118_b_low_low.delay_setpoint:=opc.popa_0082_tt_3118_b_low_low_setpoint;
tt_3118_b_low_low.enable:=opc.popa_0082_tt_3118_b_low_low_enable;

//Timer delay elapsed
tt_3118_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3118_b.scaled_value <= opc.popa_0082_tt_3118_b_low_low_setpoint THEN
    tt_3118_b_low_low.trigger := TRUE;
    ELSE
        tt_3118_b_low_low.trigger := FALSE;
END_IF
	
//tt_3118-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3118_b_low();
tt_3118_b_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3118_b_low.reset:=opc.popa_0082_alarm_reset;
tt_3118_b_low.priority:=opc.popa_0082_tt_3118_b_low_priority;
tt_3118_b_low.delay_setpoint:=opc.popa_0082_tt_3118_b_low_setpoint;
tt_3118_b_low.enable:=opc.popa_0082_tt_3118_b_low_enable;

//Timer delay elapsed
tt_3118_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3118_b.scaled_value < opc.popa_0082_tt_3118_b_low_setpoint THEN
    tt_3118_b_low.trigger := TRUE;
    ELSE
        tt_3118_b_low.trigger := FALSE;
END_IF
	
//tt_3118-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3118_b_high();
tt_3118_b_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3118_b_high.reset:=opc.popa_0082_alarm_reset;
tt_3118_b_high.priority:=opc.popa_0082_tt_3118_b_high_priority;
tt_3118_b_high.delay_setpoint:=opc.popa_0082_tt_3118_b_high_setpoint;
tt_3118_b_high.enable:=opc.popa_0082_tt_3118_b_high_enable;

//Timer delay elapsed
tt_3118_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3118_b.scaled_value > opc.popa_0082_tt_3118_b_high_setpoint THEN
    tt_3118_b_high.trigger := TRUE;
    ELSE
        tt_3118_b_high.trigger := FALSE;
END_IF
	
//tt_3118-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3118_b_high_high();
tt_3118_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3118_b_high_high.reset:=opc.popa_0082_alarm_reset;
tt_3118_b_high_high.priority:=opc.popa_0082_tt_3118_b_high_high_priority;
tt_3118_b_high_high.delay_setpoint:=opc.popa_0082_tt_3118_b_high_high_setpoint;
tt_3118_b_high_high.enable:=opc.popa_0082_tt_3118_b_high_high_enable;

//Timer delay elapsed
tt_3118_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3118_b.scaled_value >= opc.popa_0082_tt_3118_b_high_high_setpoint THEN
    tt_3118_b_high_high.trigger := TRUE;
    ELSE
        tt_3118_b_high_high.trigger := FALSE;
END_IF


//tt_3218-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3218_b_low_low();
tt_3218_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3218_b_low_low.reset:=opc.popa_0082_alarm_reset;
tt_3218_b_low_low.priority:=opc.popa_0082_tt_3218_b_low_low_priority;
tt_3218_b_low_low.delay_setpoint:=opc.popa_0082_tt_3218_b_low_low_setpoint;
tt_3218_b_low_low.enable:=opc.popa_0082_tt_3218_b_low_low_enable;

//Timer delay elapsed
tt_3218_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3218_b.scaled_value <= opc.popa_0082_tt_3218_b_low_low_setpoint THEN
    tt_3218_b_low_low.trigger := TRUE;
    ELSE
        tt_3218_b_low_low.trigger := FALSE;
END_IF
	
//tt_3218-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3218_b_low();
tt_3218_b_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3218_b_low.reset:=opc.popa_0082_alarm_reset;
tt_3218_b_low.priority:=opc.popa_0082_tt_3218_b_low_priority;
tt_3218_b_low.delay_setpoint:=opc.popa_0082_tt_3218_b_low_setpoint;
tt_3218_b_low.enable:=opc.popa_0082_tt_3218_b_low_enable;

//Timer delay elapsed
tt_3218_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3218_b.scaled_value < opc.popa_0082_tt_3218_b_low_setpoint THEN
    tt_3218_b_low.trigger := TRUE;
    ELSE
        tt_3218_b_low.trigger := FALSE;
END_IF
	
//tt_3218-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3218_b_high();
tt_3218_b_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3218_b_high.reset:=opc.popa_0082_alarm_reset;
tt_3218_b_high.priority:=opc.popa_0082_tt_3218_b_high_priority;
tt_3218_b_high.delay_setpoint:=opc.popa_0082_tt_3218_b_high_setpoint;
tt_3218_b_high.enable:=opc.popa_0082_tt_3218_b_high_enable;

//Timer delay elapsed
tt_3218_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3218_b.scaled_value > opc.popa_0082_tt_3218_b_high_setpoint THEN
    tt_3218_b_high.trigger := TRUE;
    ELSE
        tt_3218_b_high.trigger := FALSE;
END_IF
	
//tt_3218-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3218_b_high_high();
tt_3218_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3218_b_high_high.reset:=opc.popa_0082_alarm_reset;
tt_3218_b_high_high.priority:=opc.popa_0082_tt_3218_b_high_high_priority;
tt_3218_b_high_high.delay_setpoint:=opc.popa_0082_tt_3218_b_high_high_setpoint;
tt_3218_b_high_high.enable:=opc.popa_0082_tt_3218_b_high_high_enable;

//Timer delay elapsed
tt_3218_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3218_b.scaled_value >= opc.popa_0082_tt_3218_b_high_high_setpoint THEN
    tt_3218_b_high_high.trigger := TRUE;
    ELSE
        tt_3218_b_high_high.trigger := FALSE;
END_IF


//tt_3318-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3318_b_low_low();
tt_3318_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3318_b_low_low.reset:=opc.popa_0082_alarm_reset;
tt_3318_b_low_low.priority:=opc.popa_0082_tt_3318_b_low_low_priority;
tt_3318_b_low_low.delay_setpoint:=opc.popa_0082_tt_3318_b_low_low_setpoint;
tt_3318_b_low_low.enable:=opc.popa_0082_tt_3318_b_low_low_enable;

//Timer delay elapsed
tt_3318_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3318_b.scaled_value <= opc.popa_0082_tt_3318_b_low_low_setpoint THEN
    tt_3318_b_low_low.trigger := TRUE;
    ELSE
        tt_3318_b_low_low.trigger := FALSE;
END_IF
	
//tt_3318-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3318_b_low();
tt_3318_b_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3318_b_low.reset:=opc.popa_0082_alarm_reset;
tt_3318_b_low.priority:=opc.popa_0082_tt_3318_b_low_priority;
tt_3318_b_low.delay_setpoint:=opc.popa_0082_tt_3318_b_low_setpoint;
tt_3318_b_low.enable:=opc.popa_0082_tt_3318_b_low_enable;

//Timer delay elapsed
tt_3318_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3318_b.scaled_value < opc.popa_0082_tt_3318_b_low_setpoint THEN
    tt_3318_b_low.trigger := TRUE;
    ELSE
        tt_3318_b_low.trigger := FALSE;
END_IF
	
//tt_3318-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3318_b_high();
tt_3318_b_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3318_b_high.reset:=opc.popa_0082_alarm_reset;
tt_3318_b_high.priority:=opc.popa_0082_tt_3318_b_high_priority;
tt_3318_b_high.delay_setpoint:=opc.popa_0082_tt_3318_b_high_setpoint;
tt_3318_b_high.enable:=opc.popa_0082_tt_3318_b_high_enable;

//Timer delay elapsed
tt_3318_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3318_b.scaled_value > opc.popa_0082_tt_3318_b_high_setpoint THEN
    tt_3318_b_high.trigger := TRUE;
    ELSE
        tt_3318_b_high.trigger := FALSE;
END_IF
	
//tt_3318-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3318_b_high_high();
tt_3318_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3318_b_high_high.reset:=opc.popa_0082_alarm_reset;
tt_3318_b_high_high.priority:=opc.popa_0082_tt_3318_b_high_high_priority;
tt_3318_b_high_high.delay_setpoint:=opc.popa_0082_tt_3318_b_high_high_setpoint;
tt_3318_b_high_high.enable:=opc.popa_0082_tt_3318_b_high_high_enable;

//Timer delay elapsed
tt_3318_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3318_b.scaled_value >= opc.popa_0082_tt_3318_b_high_high_setpoint THEN
    tt_3318_b_high_high.trigger := TRUE;
    ELSE
        tt_3318_b_high_high.trigger := FALSE;
END_IF


//tt_3140-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3140_b_low_low();
tt_3140_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3140_b_low_low.reset:=opc.popa_0082_alarm_reset;
tt_3140_b_low_low.priority:=opc.popa_0082_tt_3140_b_low_low_priority;
tt_3140_b_low_low.delay_setpoint:=opc.popa_0082_tt_3140_b_low_low_setpoint;
tt_3140_b_low_low.enable:=opc.popa_0082_tt_3140_b_low_low_enable;

//Timer delay elapsed
tt_3140_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3140_b.scaled_value <= opc.popa_0082_tt_3140_b_low_low_setpoint THEN
    tt_3140_b_low_low.trigger := TRUE;
    ELSE
        tt_3140_b_low_low.trigger := FALSE;
END_IF
	
//tt_3140-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3140_b_low();
tt_3140_b_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3140_b_low.reset:=opc.popa_0082_alarm_reset;
tt_3140_b_low.priority:=opc.popa_0082_tt_3140_b_low_priority;
tt_3140_b_low.delay_setpoint:=opc.popa_0082_tt_3140_b_low_setpoint;
tt_3140_b_low.enable:=opc.popa_0082_tt_3140_b_low_enable;

//Timer delay elapsed
tt_3140_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3140_b.scaled_value < opc.popa_0082_tt_3140_b_low_setpoint THEN
    tt_3140_b_low.trigger := TRUE;
    ELSE
        tt_3140_b_low.trigger := FALSE;
END_IF
	
//tt_3140-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3140_b_high();
tt_3140_b_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3140_b_high.reset:=opc.popa_0082_alarm_reset;
tt_3140_b_high.priority:=opc.popa_0082_tt_3140_b_high_priority;
tt_3140_b_high.delay_setpoint:=opc.popa_0082_tt_3140_b_high_setpoint;
tt_3140_b_high.enable:=opc.popa_0082_tt_3140_b_high_enable;

//Timer delay elapsed
tt_3140_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3140_b.scaled_value > opc.popa_0082_tt_3140_b_high_setpoint THEN
    tt_3140_b_high.trigger := TRUE;
    ELSE
        tt_3140_b_high.trigger := FALSE;
END_IF
	
//tt_3140-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3140_b_high_high();
tt_3140_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3140_b_high_high.reset:=opc.popa_0082_alarm_reset;
tt_3140_b_high_high.priority:=opc.popa_0082_tt_3140_b_high_high_priority;
tt_3140_b_high_high.delay_setpoint:=opc.popa_0082_tt_3140_b_high_high_setpoint;
tt_3140_b_high_high.enable:=opc.popa_0082_tt_3140_b_high_high_enable;

//Timer delay elapsed
tt_3140_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3140_b.scaled_value >= opc.popa_0082_tt_3140_b_high_high_setpoint THEN
    tt_3140_b_high_high.trigger := TRUE;
    ELSE
        tt_3140_b_high_high.trigger := FALSE;
END_IF


//tt_3240-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3240_b_low_low();
tt_3240_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3240_b_low_low.reset:=opc.popa_0082_alarm_reset;
tt_3240_b_low_low.priority:=opc.popa_0082_tt_3240_b_low_low_priority;
tt_3240_b_low_low.delay_setpoint:=opc.popa_0082_tt_3240_b_low_low_setpoint;
tt_3240_b_low_low.enable:=opc.popa_0082_tt_3240_b_low_low_enable;

//Timer delay elapsed
tt_3240_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3240_b.scaled_value <= opc.popa_0082_tt_3240_b_low_low_setpoint THEN
    tt_3240_b_low_low.trigger := TRUE;
    ELSE
        tt_3240_b_low_low.trigger := FALSE;
END_IF
	
//tt_3240-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3240_b_low();
tt_3240_b_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3240_b_low.reset:=opc.popa_0082_alarm_reset;
tt_3240_b_low.priority:=opc.popa_0082_tt_3240_b_low_priority;
tt_3240_b_low.delay_setpoint:=opc.popa_0082_tt_3240_b_low_setpoint;
tt_3240_b_low.enable:=opc.popa_0082_tt_3240_b_low_enable;

//Timer delay elapsed
tt_3240_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3240_b.scaled_value < opc.popa_0082_tt_3240_b_low_setpoint THEN
    tt_3240_b_low.trigger := TRUE;
    ELSE
        tt_3240_b_low.trigger := FALSE;
END_IF
	
//tt_3240-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3240_b_high();
tt_3240_b_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3240_b_high.reset:=opc.popa_0082_alarm_reset;
tt_3240_b_high.priority:=opc.popa_0082_tt_3240_b_high_priority;
tt_3240_b_high.delay_setpoint:=opc.popa_0082_tt_3240_b_high_setpoint;
tt_3240_b_high.enable:=opc.popa_0082_tt_3240_b_high_enable;

//Timer delay elapsed
tt_3240_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3240_b.scaled_value > opc.popa_0082_tt_3240_b_high_setpoint THEN
    tt_3240_b_high.trigger := TRUE;
    ELSE
        tt_3240_b_high.trigger := FALSE;
END_IF
	
//tt_3240-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3240_b_high_high();
tt_3240_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3240_b_high_high.reset:=opc.popa_0082_alarm_reset;
tt_3240_b_high_high.priority:=opc.popa_0082_tt_3240_b_high_high_priority;
tt_3240_b_high_high.delay_setpoint:=opc.popa_0082_tt_3240_b_high_high_setpoint;
tt_3240_b_high_high.enable:=opc.popa_0082_tt_3240_b_high_high_enable;

//Timer delay elapsed
tt_3240_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3240_b.scaled_value >= opc.popa_0082_tt_3240_b_high_high_setpoint THEN
    tt_3240_b_high_high.trigger := TRUE;
    ELSE
        tt_3240_b_high_high.trigger := FALSE;
END_IF


//tt_3340-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3340_b_low_low();
tt_3340_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3340_b_low_low.reset:=opc.popa_0082_alarm_reset;
tt_3340_b_low_low.priority:=opc.popa_0082_tt_3340_b_low_low_priority;
tt_3340_b_low_low.delay_setpoint:=opc.popa_0082_tt_3340_b_low_low_setpoint;
tt_3340_b_low_low.enable:=opc.popa_0082_tt_3340_b_low_low_enable;

//Timer delay elapsed
tt_3340_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3340_b.scaled_value <= opc.popa_0082_tt_3340_b_low_low_setpoint THEN
    tt_3340_b_low_low.trigger := TRUE;
    ELSE
        tt_3340_b_low_low.trigger := FALSE;
END_IF
	
//tt_3340-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3340_b_low();
tt_3340_b_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3340_b_low.reset:=opc.popa_0082_alarm_reset;
tt_3340_b_low.priority:=opc.popa_0082_tt_3340_b_low_priority;
tt_3340_b_low.delay_setpoint:=opc.popa_0082_tt_3340_b_low_setpoint;
tt_3340_b_low.enable:=opc.popa_0082_tt_3340_b_low_enable;

//Timer delay elapsed
tt_3340_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3340_b.scaled_value < opc.popa_0082_tt_3340_b_low_setpoint THEN
    tt_3340_b_low.trigger := TRUE;
    ELSE
        tt_3340_b_low.trigger := FALSE;
END_IF
	
//tt_3340-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3340_b_high();
tt_3340_b_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3340_b_high.reset:=opc.popa_0082_alarm_reset;
tt_3340_b_high.priority:=opc.popa_0082_tt_3340_b_high_priority;
tt_3340_b_high.delay_setpoint:=opc.popa_0082_tt_3340_b_high_setpoint;
tt_3340_b_high.enable:=opc.popa_0082_tt_3340_b_high_enable;

//Timer delay elapsed
tt_3340_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3340_b.scaled_value > opc.popa_0082_tt_3340_b_high_setpoint THEN
    tt_3340_b_high.trigger := TRUE;
    ELSE
        tt_3340_b_high.trigger := FALSE;
END_IF
	
//tt_3340-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3340_b_high_high();
tt_3340_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3340_b_high_high.reset:=opc.popa_0082_alarm_reset;
tt_3340_b_high_high.priority:=opc.popa_0082_tt_3340_b_high_high_priority;
tt_3340_b_high_high.delay_setpoint:=opc.popa_0082_tt_3340_b_high_high_setpoint;
tt_3340_b_high_high.enable:=opc.popa_0082_tt_3340_b_high_high_enable;

//Timer delay elapsed
tt_3340_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3340_b.scaled_value >= opc.popa_0082_tt_3340_b_high_high_setpoint THEN
    tt_3340_b_high_high.trigger := TRUE;
    ELSE
        tt_3340_b_high_high.trigger := FALSE;
END_IF


//tt_3432-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3432_b_low_low();
tt_3432_b_low_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3432_b_low_low.reset:=opc.popa_0082_alarm_reset;
tt_3432_b_low_low.priority:=opc.popa_0092_tt_3432_b_low_low_priority;
tt_3432_b_low_low.delay_setpoint:=opc.popa_0092_tt_3432_b_low_low_setpoint;
tt_3432_b_low_low.enable:=opc.popa_0092_tt_3432_b_low_low_enable;

//Timer delay elapsed
tt_3432_b_low_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3432_b.scaled_value <= opc.popa_0092_tt_3432_b_low_low_setpoint THEN
    tt_3432_b_low_low.trigger := TRUE;
    ELSE
        tt_3432_b_low_low.trigger := FALSE;
END_IF
	
//tt_3432-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3432_b_low();
tt_3432_b_low.alm_ack:=opc.popa_0082_alarm_ack;
tt_3432_b_low.reset:=opc.popa_0082_alarm_reset;
tt_3432_b_low.priority:=opc.popa_0092_tt_3432_b_low_priority;
tt_3432_b_low.delay_setpoint:=opc.popa_0092_tt_3432_b_low_setpoint;
tt_3432_b_low.enable:=opc.popa_0092_tt_3432_b_low_enable;

//Timer delay elapsed
tt_3432_b_low.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3432_b.scaled_value < opc.popa_0092_tt_3432_b_low_setpoint THEN
    tt_3432_b_low.trigger := TRUE;
    ELSE
        tt_3432_b_low.trigger := FALSE;
END_IF
	
//tt_3432-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3432_b_high();
tt_3432_b_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3432_b_high.reset:=opc.popa_0082_alarm_reset;
tt_3432_b_high.priority:=opc.popa_0092_tt_3432_b_high_priority;
tt_3432_b_high.delay_setpoint:=opc.popa_0092_tt_3432_b_high_setpoint;
tt_3432_b_high.enable:=opc.popa_0092_tt_3432_b_high_enable;

//Timer delay elapsed
tt_3432_b_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3432_b.scaled_value > opc.popa_0092_tt_3432_b_high_setpoint THEN
    tt_3432_b_high.trigger := TRUE;
    ELSE
        tt_3432_b_high.trigger := FALSE;
END_IF
	
//tt_3432-----------------------------------------------------------------------------------------------------
//Instantiate the alarm block, and map the inputs from the OPC GVL
tt_3432_b_high_high();
tt_3432_b_high_high.alm_ack:=opc.popa_0082_alarm_ack;
tt_3432_b_high_high.reset:=opc.popa_0082_alarm_reset;
tt_3432_b_high_high.priority:=opc.popa_0092_tt_3432_b_high_high_priority;
tt_3432_b_high_high.delay_setpoint:=opc.popa_0092_tt_3432_b_high_high_setpoint;
tt_3432_b_high_high.enable:=opc.popa_0092_tt_3432_b_high_high_enable;

//Timer delay elapsed
tt_3432_b_high_high.delay_ton_et;

//Place your alarm trigger logic here. 
IF io_mapping.tt_3432_b.scaled_value >= opc.popa_0092_tt_3432_b_high_high_setpoint THEN
    tt_3432_b_high_high.trigger := TRUE;
    ELSE
        tt_3432_b_high_high.trigger := FALSE;
END_IF


]]></ST>
    </Implementation>
    <LineIds Name="faults">
      <LineId Id="3085" Count="2832" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>